{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/_helpers/app.initializer.ts","./src/app/_helpers/auth.guard.ts","./src/app/_helpers/error.interceptor.ts","./src/app/_helpers/index.ts","./src/app/_helpers/jwt.interceptor.ts","./src/app/_models/categories.ts","./src/app/_models/index.ts","./src/app/_models/question.ts","./src/app/_models/test.ts","./src/app/_models/user-answer.ts","./src/app/_models/user-test.ts","./src/app/_models/user.ts","./src/app/_services/authentication.service.ts","./src/app/_services/categories.service.ts","./src/app/_services/index.ts","./src/app/_services/tests.service.ts","./src/app/_services/user.service.ts","./src/app/admin/categories/categories-edit.component.ts","./src/app/admin/categories/categories-edit.component.html","./src/app/admin/tests/test-edit.component.ts","./src/app/admin/tests/test-edit.component.html","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/categories/categories.component.ts","./src/app/categories/categories.component.html","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/app/home/index.ts","./src/app/login/index.ts","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/app/play-test/play-test.component.ts","./src/app/play-test/play-test.component.html","./src/app/result/result.component.ts","./src/app/result/result.component.html","./src/app/test-list/test-accept-dialog/test-accept-dialog.ts","./src/app/test-list/test-accept-dialog/test-accept-dialog.html","./src/app/test-list/test-list.component.ts","./src/app/test-list/test-list.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,wE;;;;;;;;;;;;ACVA;AAAA;AAAO,SAAS,cAAc,CAAC,qBAA4C;IACvE,OAAO,GAAG,EAAE,CAAC,IAAI,OAAO,CAAC,OAAO,CAAC,EAAE;QAC/B,gEAAgE;QAChE,qBAAqB,CAAC,YAAY,EAAE;aAC/B,SAAS,EAAE;aACX,GAAG,CAAC,OAAO,CAAC,CAAC;IACtB,CAAC,CAAC,CAAC;AACP,CAAC;;;;;;;;;;;;;ACTD;AAAA;AAAA;AAAA;AAAA;AAA2C;;;;AAWpC,MAAM,SAAS;IACpB,YACU,MAAc,EACd,qBAA4C;QAD5C,WAAM,GAAN,MAAM,CAAQ;QACd,0BAAqB,GAArB,qBAAqB,CAAuB;IACnD,CAAC;IAEJ,WAAW,CAAC,KAA6B,EAAE,KAA0B;QACnE,MAAM,IAAI,GAAG,IAAI,CAAC,qBAAqB,CAAC,SAAS,CAAC;QAClD,IAAI,IAAI,EAAE;YACR,2BAA2B;YAC3B,OAAO,IAAI,CAAC;SACb;aAAM;YACL,8DAA8D;YAC9D,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,EAAE;gBAC/B,WAAW,EAAE,EAAE,SAAS,EAAE,KAAK,CAAC,GAAG,EAAE;aACtC,CAAC,CAAC;YACH,OAAO,KAAK,CAAC;SACd;IACH,CAAC;;kEAlBU,SAAS;4FAAT,SAAS,WAAT,SAAS,mBADI,MAAM;6FACnB,SAAS;cADrB,wDAAU;eAAC,EAAE,UAAU,EAAE,MAAM,EAAE;;;;;;;;;;;;;;ACVlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAA2C;AAEG;AACF;;;AAKrC,MAAM,gBAAgB;IACzB,YAAoB,qBAA4C;QAA5C,0BAAqB,GAArB,qBAAqB,CAAuB;IAAI,CAAC;IAErE,SAAS,CAAC,OAAyB,EAAE,IAAiB;QAClD,OAAO,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,iEAAU,CAAC,GAAG,CAAC,EAAE;YAC9C,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC,QAAQ,CAAC,GAAG,CAAC,MAAM,CAAC,IAAI,IAAI,CAAC,qBAAqB,CAAC,SAAS,EAAE;gBACzE,uDAAuD;gBACvD,IAAI,CAAC,qBAAqB,CAAC,MAAM,EAAE,CAAC;aACvC;YAED,MAAM,KAAK,GAAG,CAAC,GAAG,IAAI,GAAG,CAAC,KAAK,IAAI,GAAG,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,GAAG,CAAC,UAAU,CAAC;YACxE,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;YACnB,OAAO,uDAAU,CAAC,KAAK,CAAC,CAAC;QAC7B,CAAC,CAAC,CAAC;IACP,CAAC;;gFAdQ,gBAAgB;mGAAhB,gBAAgB,WAAhB,gBAAgB;6FAAhB,gBAAgB;cAD5B,wDAAU;;;;;;;;;;;;;;ACPX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkC;AACL;AACO;AACF;;;;;;;;;;;;;ACHlC;AAAA;AAAA;AAAA;AAAA;AAA2C;AASa;;;AAIjD,MAAM,cAAc;IACzB,YAAoB,qBAA4C;QAA5C,0BAAqB,GAArB,qBAAqB,CAAuB;IAAG,CAAC;IAEpE,SAAS,CACP,OAAyB,EACzB,IAAiB;QAEjB,8EAA8E;QAC9E,MAAM,IAAI,GAAG,IAAI,CAAC,qBAAqB,CAAC,SAAS,CAAC;QAClD,MAAM,UAAU,GAAG,IAAI,IAAI,IAAI,CAAC,QAAQ,CAAC;QACzC,MAAM,QAAQ,GAAG,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC,qEAAW,CAAC,MAAM,CAAC,CAAC;QAC5D,IAAI,UAAU,IAAI,QAAQ,EAAE;YAC1B,OAAO,GAAG,OAAO,CAAC,KAAK,CAAC;gBACtB,UAAU,EAAE,EAAE,aAAa,EAAE,UAAU,IAAI,CAAC,QAAQ,EAAE,EAAE;aACzD,CAAC,CAAC;SACJ;QAED,OAAO,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;IAC9B,CAAC;;4EAlBU,cAAc;iGAAd,cAAc,WAAd,cAAc;6FAAd,cAAc;cAD1B,wDAAU;;;;;;;;;;;;;;ACZX;AAAA;AAAO,MAAM,UAAU;CAGtB;;;;;;;;;;;;;ACHD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAuB;AACA;AACM;AACC;AACF;AACD;;;;;;;;;;;;;ACL3B;AAAA;AAAO,MAAM,QAAQ;CAIpB;;;;;;;;;;;;;ACFD;AAAA;AAAO,MAAM,IAAI;CAKhB;;;;;;;;;;;;;ACPD;AAAA;AAAO,MAAM,UAAU;CAMtB;;;;;;;;;;;;;ACND;AAAA;AAAO,MAAM,QAAQ;CAMpB;;;;;;;;;;;;;ACND;AAAA;AAAO,MAAM,IAAI;CAQhB;;;;;;;;;;;;;ACRD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA2C;AAGQ;AACd;AAEmB;;;;AAIjD,MAAM,qBAAqB;IAI9B,YACY,MAAc,EACd,IAAgB;QADhB,WAAM,GAAN,MAAM,CAAQ;QACd,SAAI,GAAJ,IAAI,CAAY;QAExB,IAAI,CAAC,WAAW,GAAG,IAAI,oDAAe,CAAO,IAAI,CAAC,CAAC;QACnD,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,WAAW,CAAC,YAAY,EAAE,CAAC;IAChD,CAAC;IAED,IAAW,SAAS;QAChB,OAAO,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;IAClC,CAAC;IAED,KAAK,CAAC,QAAgB,EAAE,QAAgB;QACpC,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAM,GAAG,qEAAW,CAAC,MAAM,qBAAqB,EAAE,EAAE,QAAQ,EAAE,QAAQ,EAAE,EAAE,EAAE,eAAe,EAAE,IAAI,EAAE,CAAC;aACpH,IAAI,CAAC,0DAAG,CAAC,IAAI,CAAC,EAAE;YACb,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YAC5B,IAAI,CAAC,sBAAsB,EAAE,CAAC;YAC9B,OAAO,IAAI,CAAC;QAChB,CAAC,CAAC,CAAC,CAAC;IACZ,CAAC;IAED,MAAM;QACF,IAAI,CAAC,IAAI,CAAC,IAAI,CAAM,GAAG,qEAAW,CAAC,MAAM,qBAAqB,EAAE,EAAE,EAAE,EAAE,eAAe,EAAE,IAAI,EAAE,CAAC,CAAC,SAAS,EAAE,CAAC;QAC3G,IAAI,CAAC,qBAAqB,EAAE,CAAC;QAC7B,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC5B,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;IACrC,CAAC;IAED,YAAY;QACR,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAM,GAAG,qEAAW,CAAC,MAAM,sBAAsB,EAAE,EAAE,EAAE,EAAE,eAAe,EAAE,IAAI,EAAE,CAAC;aACjG,IAAI,CAAC,0DAAG,CAAC,CAAC,IAAI,EAAE,EAAE;YACf,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YAC5B,IAAI,CAAC,sBAAsB,EAAE,CAAC;YAC9B,OAAO,IAAI,CAAC;QAChB,CAAC,CAAC,CAAC,CAAC;IACZ,CAAC;IAMO,sBAAsB;QAC1B,kDAAkD;QAClD,MAAM,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAEzE,gEAAgE;QAChE,MAAM,OAAO,GAAG,IAAI,IAAI,CAAC,QAAQ,CAAC,GAAG,GAAG,IAAI,CAAC,CAAC;QAC9C,MAAM,OAAO,GAAG,OAAO,CAAC,OAAO,EAAE,GAAG,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,CAAC;QAC7D,IAAI,CAAC,mBAAmB,GAAG,UAAU,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,YAAY,EAAE,CAAC,SAAS,EAAE,EAAE,OAAO,CAAC,CAAC;IAC1F,CAAC;IAEO,qBAAqB;QACzB,YAAY,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC;IAC3C,CAAC;;0FAzDQ,qBAAqB;wGAArB,qBAAqB,WAArB,qBAAqB,mBADR,MAAM;6FACnB,qBAAqB;cADjC,wDAAU;eAAC,EAAE,UAAU,EAAE,MAAM,EAAE;;;;;;;;;;;;;;ACRlC;AAAA;AAAA;AAAA;AAAA;AAA2C;AAEa;;;AAGjD,MAAM,iBAAiB;IAG5B,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAF5B,QAAG,GAAG,qEAAW,CAAC,MAAM,GAAG,iBAAiB,CAAC;IAEd,CAAC;IAExC,gBAAgB;QACd,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IACjC,CAAC;IAED,aAAa,CAAC,EAAU;QACtB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,GAAG,GAAG,GAAG,EAAE,CAAC,CAAC;IAC5C,CAAC;IAED,gBAAgB,CAAC,UAAsB;QACrC,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,UAAU,CAAC,CAAC;IAC9C,CAAC;IACD,gBAAgB,CAAC,UAAsB;QACrC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,EAAE,UAAU,CAAC,CAAC;IAC7C,CAAC;IACD,gBAAgB,CAAC,EAAU;QACzB,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,GAAG,GAAG,GAAG,EAAE,CAAC,CAAC;IAC/C,CAAC;;kFArBU,iBAAiB;oGAAjB,iBAAiB,WAAjB,iBAAiB;6FAAjB,iBAAiB;cAD7B,wDAAU;;;;;;;;;;;;;;ACLX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;AACV;AACM;AACL;;;;;;;;;;;;;ACFhC;AAAA;AAAA;AAAA;AAAA;AAA2C;AAEa;;;AAGjD,MAAM,YAAY;IAIvB,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAH5B,QAAG,GAAG,qEAAW,CAAC,MAAM,GAAG,YAAY,CAAC;QACxC,gBAAW,GAAG,qEAAW,CAAC,MAAM,GAAG,YAAY,CAAC;IAEjB,CAAC;IAExC,WAAW;QACT,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IACjC,CAAC;IAED,OAAO,CAAC,EAAU;QAChB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,GAAG,GAAG,GAAG,EAAE,CAAC,CAAC;IAC5C,CAAC;IAED,oBAAoB,CAAC,EAAU;QAC7B,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,GAAG,GAAG,GAAG,EAAE,CAAC,CAAC;IAC5C,CAAC;IAED,eAAe,CAAC,EAAU;QACxB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,WAAW,GAAG,GAAG,GAAG,EAAE,CAAC,CAAC;IACpD,CAAC;IAED,UAAU,CAAC,IAAU;QACnB,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;IACxC,CAAC;IAED,UAAU,CAAC,IAAU;QACnB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;IACvC,CAAC;IACD,UAAU,CAAC,EAAU;QACnB,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,GAAG,GAAG,GAAG,EAAE,CAAC,CAAC;IAC/C,CAAC;;wEA/BU,YAAY;+FAAZ,YAAY,WAAZ,YAAY;6FAAZ,YAAY;cADxB,wDAAU;;;;;;;;;;;;;;ACLX;AAAA;AAAA;AAAA;AAAA;AAA2C;AAGa;;;AAIjD,MAAM,WAAW;IACtB,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;IAAG,CAAC;IAExC,MAAM;QACJ,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAS,GAAG,qEAAW,CAAC,MAAM,QAAQ,CAAC,CAAC;IAC9D,CAAC;;sEALU,WAAW;8FAAX,WAAW,WAAX,WAAW,mBADE,MAAM;6FACnB,WAAW;cADvB,wDAAU;eAAC,EAAE,UAAU,EAAE,MAAM,EAAE;;;;;;;;;;;;;;ACJlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAwD;AACiB;AACZ;AACV;;;;;;;;;;;;;ICJnD,0EACE;IAAA,6EAA+D;IAArB,2TAAoB;IAAC,8DAAG;IAAA,4DAAS;IAC3E,6EAME;IAFA,iVAAgC;IAEhC,iEACF;IAAA,4DAAS;IACT,6EAME;IAFA,mVAAkC;IAElC,mEACF;IAAA,4DAAS;IACT,uEAAM;IAAA,qGAA0C;IAAA,4DAAO;IACzD,4DAAM;;;IAdF,0DAA8B;IAA9B,8FAA8B;IAQ9B,0DAA8B;IAA9B,8FAA8B;;;;IAQhC,0EACE;IAAA,6EAME;IAFA,yVAAgC;IAEhC,iEACF;IAAA,4DAAS;IACX,4DAAM;;;IALF,0DAA8B;IAA9B,8FAA8B;;;IAWhC,yEAAsC;IAAA,8DAAG;IAAA,4DAAK;;;IAC9C,yEAAuC;IAAA,uDAAgB;IAAA,4DAAK;;;IAArB,0DAAgB;IAAhB,+EAAgB;;;IAKvD,yEAAsC;IAAA,+DAAI;IAAA,4DAAK;;;;IAQ3C,6EAOE;IAFA,kVAAiB,EAAE,IAAC;IAEpB,2EAAU;IAAA,gEAAK;IAAA,4DAAW;IAC5B,4DAAS;;;;IAdX,qFAKE;IAAA,4EACA;IAD4B,wXAA0B;IAAtD,4DACA;IAAA,iJAOE;IAEJ,4DAAiB;;;IAVa,0DAA0B;IAA1B,qFAA0B;IAEpD,0DAAoB;IAApB,kFAAoB;;;;IASxB,0EACE;IAAA,qFACE;IAAA,4EACF;IAD8B,6WAA0B;IAAtD,4DACF;IAAA,4DAAiB;IACjB,6EAME;IAFA,+aAA+B;IAE/B,iEACF;IAAA,4DAAS;IACX,4DAAM;;;;IAV0B,0DAA0B;IAA1B,qFAA0B;IAKtD,0DAA8B;IAA9B,+FAA8B;;;IAOlC,oEACE;IAAA,uDACF;IAAA,4DAAI;;;IADF,0DACF;IADE,4FACF;;;IAjCF,yEACE;IAAA,gJAKE;IAWF,0HACE;IAaF,sHACE;IAEJ,4DAAK;;;;IA9BD,0DAAc;IAAd,+EAAc;IAaC,0DAAuC;IAAvC,mHAAuC;IAcrD,0DAAwC;IAAxC,oHAAwC;;;IAM/C,oEAA4D;;;;IAC5D,yEAKM;IAHJ,kUAAS,gCAAoB,IAAC;IAG/B,4DAAK;;;;IAFJ,iHAAkD;;ADzE/C,MAAM,uBAAuB;IAUlC,YACU,qBAA4C,EAC5C,iBAAoC;QADpC,0BAAqB,GAArB,qBAAqB,CAAuB;QAC5C,sBAAiB,GAAjB,iBAAiB,CAAmB;QAX9C,qBAAgB,GAAa,CAAC,UAAU,EAAE,MAAM,CAAC,CAAC;QAClD,aAAQ,GAAe,IAAI,6DAAU,EAAE,CAAC;QAGxC,gBAAW,GAAG,IAAI,GAAG,EAAc,CAAC;QACpC,YAAO,GAAG,IAAI,GAAG,EAAc,CAAC;QAChC,WAAM,GAAG,KAAK,CAAC;QAOb,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC,CAAC,CAAC;IACpE,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,cAAc,EAAE,CAAC;QACtB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IACzB,CAAC;IAED,KAAK;QACH,IAAI,CAAC,WAAW,CAAC,KAAK,EAAE,CAAC;QACzB,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,CAAC;QACrB,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;IACtB,CAAC;IAED,cAAc;QACZ,IAAI,CAAC,iBAAiB;aACnB,gBAAgB,EAAE;aAClB,SAAS,CAAC,CAAC,IAAkB,EAAE,EAAE,CAAC,CAAC,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,CAAC,CAAC;QAC/D,IAAI,CAAC,KAAK,EAAE,CAAC;IACf,CAAC;IAED,QAAQ;QACN,IAAI,OAAO,GAAe,EAAE,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC;QACnD,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;QACjC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;QAC1B,IAAI,CAAC,KAAK,CAAC,UAAU,EAAE,CAAC;IAC1B,CAAC;IAED,WAAW,CAAC,GAAoB;QAC9B,KAAK,IAAI,KAAK,IAAI,GAAG;YACnB,IAAI,CAAC,iBAAiB;iBACnB,gBAAgB,CAAC,KAAK,CAAC,EAAE,CAAC;iBAC1B,SAAS,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,CAAC,cAAc,EAAE,CAAC,CAAC;QAChD,IAAI,CAAC,KAAK,EAAE,CAAC;QACb,IAAI,CAAC,cAAc,EAAE,CAAC;IACxB,CAAC;IAED,SAAS,CAAC,GAAoB;QAC5B,KAAK,IAAI,KAAK,IAAI,GAAG;YACnB,IAAI,CAAC,iBAAiB;iBACnB,gBAAgB,CAAC,KAAK,CAAC;iBACvB,SAAS,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,CAAC,cAAc,EAAE,CAAC,CAAC;QAChD,IAAI,CAAC,KAAK,EAAE,CAAC;QACb,IAAI,CAAC,cAAc,EAAE,CAAC;IACxB,CAAC;IAED,SAAS,CAAC,EAAU;QAClB,IAAI,OAAmB,CAAC;QACxB,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,EAAE;YACzB,IAAI,EAAE,IAAI,CAAC,CAAC,EAAE,EAAE;gBACd,IAAI,CAAC,QAAQ,CAAC,IAAI,GAAG,CAAC,CAAC,IAAI,CAAC;gBAC5B,IAAI,CAAC,iBAAiB;qBACnB,gBAAgB,CAAC,IAAI,CAAC,QAAQ,CAAC;qBAC/B,SAAS,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,CAAC,cAAc,EAAE,CAAC,CAAC;gBAC9C,IAAI,CAAC,QAAQ,GAAG,IAAI,6DAAU,EAAE,CAAC;aAClC;QACH,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,KAAK,EAAE,CAAC;IACf,CAAC;IAED,SAAS,CAAC,GAAoB;QAC5B,IAAI,OAAO,GAAG,IAAI,KAAK,EAAc,CAAC;QACtC,KAAK,IAAI,KAAK,IAAI,GAAG;YAAE,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAC3C,IAAI,CAAC,UAAU,GAAG,OAAO,CAAC;QAC1B,GAAG,CAAC,KAAK,EAAE,CAAC;QACZ,IAAI,CAAC,KAAK,EAAE,CAAC;QACb,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;IACrB,CAAC;;8FAjFU,uBAAuB;uGAAvB,uBAAuB;kEAQvB,gEAAQ;;;;qFAVR,CAAC,8EAAiB,CAAC;QCVhC,yEAAoB;QAAA,qEAAU;QAAA,4DAAM;QACpC,mHACE;QAmBF,+MACE;QAYF,2EACE;QACA,2EACE;QAAA,iHAAsC;QACtC,iHAAuC;QACzC,qEAAe;QAGf,2EACE;QAAA,mHAAsC;QACtC,mHACE;QAkCJ,qEAAe;QAEf,mHAAuD;QACvD,mHAKC;QACH,4DAAQ;;;QAvFoB,0DAA0B;QAA1B,6EAA0B;QAiCrC,0DAAyB;QAAzB,sFAAyB;QA+CrB,0DAAmC;QAAnC,iGAAmC;QAKpD,0DAA+C;QAA/C,kGAA+C;;6FD1EtC,uBAAuB;cALnC,uDAAS;eAAC;gBACT,WAAW,EAAE,gCAAgC;gBAC7C,SAAS,EAAE,CAAC,uBAAuB,CAAC;gBACpC,SAAS,EAAE,CAAC,8EAAiB,CAAC;aAC/B;;kBASE,uDAAS;mBAAC,gEAAQ;;;;;;;;;;;;;;AEpBrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyE;AAEV;AACrB;AACmB;AACV;;;;;;;;;;;;ICJnD,0EACE;IAAA,6EAA+D;IAArB,uTAAoB;IAAC,8DAAG;IAAA,4DAAS;IAC3E,6EAME;IAFA,2UAAgC;IAEhC,iEACF;IAAA,4DAAS;IACT,6EAME;IAFA,6UAAkC;IAElC,mEACF;IAAA,4DAAS;IACT,uEAAM;IAAA,qGAA0C;IAAA,4DAAO;IACzD,4DAAM;;;IAdF,0DAA8B;IAA9B,8FAA8B;IAQ9B,0DAA8B;IAA9B,8FAA8B;;;;IAQhC,0EACE;IAAA,6EAME;IAFA,mVAAgC;IAEhC,iEACF;IAAA,4DAAS;IACX,4DAAM;;;IALF,0DAA8B;IAA9B,8FAA8B;;;IAWhC,yEAAsC;IAAA,8DAAG;IAAA,4DAAK;;;IAC9C,yEACE;IAAA,uDACF;IAAA,4DAAK;;;IADH,0DACF;IADE,0FACF;;;IAKA,yEAAsC;IAAA,qEAAU;IAAA,4DAAK;;;IAI/C,6EACE;IAAA,uDACF;IAAA,4DAAS;;;IAF8B,6EAAgB;IACrD,0DACF;IADE,wFACF;;;;IAJJ,qFACE;IAAA,6EACE;IADuB,yWAAyB;IAChD,2IACE;IAEJ,4DAAS;IACX,4DAAiB;;;IALU,0DAAyB;IAAzB,wFAAyB;IACxC,0DAA8B;IAA9B,uFAA8B;;;IAH5C,yEACE;IAAA,0IACE;IAOF,uDACF;IAAA,4DAAK;;;;IAT+B,0DAAc;IAAd,+EAAc;IAQhD,0DACF;IADE,kGACF;;;IAKA,yEAAsC;IAAA,gEAAK;IAAA,4DAAK;;;;IAE9C,qFAKE;IAAA,4EACF;IAD8B,mXAA2B;IAAvD,4DACF;IAAA,4DAAiB;;;IADa,0DAA2B;IAA3B,sFAA2B;;;;IAEzD,0EACE;IAAA,qFACE;IAAA,4EACF;IAD8B,wWAA2B;IAAvD,4DACF;IAAA,4DAAiB;IACnB,4DAAM;;;IAF0B,0DAA2B;IAA3B,sFAA2B;;;IAI3D,oEACE;IAAA,uDACF;IAAA,4DAAI;;;IADF,0DACF;IADE,6FACF;;;IAhBF,yEACE;IAAA,0IAKE;IAEF,oHACE;IAKF,gHACE;IAEJ,4DAAK;;;;IAbD,0DAAc;IAAd,+EAAc;IAIC,0DAAuC;IAAvC,mHAAuC;IAMrD,0DAAwC;IAAxC,oHAAwC;;;IAQ7C,yEAAsC;IAAA,sEAAW;IAAA,4DAAK;;;;IAEpD,qFAKE;IAAA,4EACF;IAD8B,yXAAiC;IAA7D,4DACF;IAAA,4DAAiB;;;IADa,0DAAiC;IAAjC,4FAAiC;;;;IAE/D,0EACE;IAAA,qFACE;IAAA,4EACF;IAD8B,8WAAiC;IAA7D,4DACF;IAAA,4DAAiB;IACjB,6EAME;IAFA,yaAA+B;IAE/B,iEACF;IAAA,4DAAS;IACX,4DAAM;;;;IAV0B,0DAAiC;IAAjC,4FAAiC;IAK7D,0DAA8B;IAA9B,+FAA8B;;;IAOlC,oEACE;IAAA,uDACF;IAAA,4DAAI;;;IADF,0DACF;IADE,mGACF;;;IAxBF,yEACE;IAAA,0IAKE;IAEF,oHACE;IAaF,gHACE;IAEJ,4DAAK;;;;IArBD,0DAAc;IAAd,gFAAc;IAIC,0DAAuC;IAAvC,qHAAuC;IAcrD,0DAAwC;IAAxC,sHAAwC;;;IAM/C,oEAA4D;;;;IAC5D,yEAKM;IAHJ,4TAAS,gCAAoB,IAAC;IAG/B,4DAAK;;;;IAFJ,kHAAkD;;ADzG/C,MAAM,iBAAiB;IAU5B,YACU,WAAyB,EACzB,iBAAoC;QADpC,gBAAW,GAAX,WAAW,CAAc;QACzB,sBAAiB,GAAjB,iBAAiB,CAAmB;QAX9C,qBAAgB,GAAa,CAAC,UAAU,EAAE,UAAU,EAAE,OAAO,EAAE,aAAa,CAAC,CAAC;QAC9E,SAAI,GAAS,IAAI,iDAAI,EAAE,CAAC;QAGxB,gBAAW,GAAG,IAAI,GAAG,EAAQ,CAAC;QAC9B,YAAO,GAAG,IAAI,GAAG,EAAQ,CAAC;QAC1B,WAAM,GAAG,KAAK,CAAC;IAMZ,CAAC;IAEJ,QAAQ;QACN,IAAI,CAAC,QAAQ,EAAE,CAAC;IAClB,CAAC;IAED,KAAK;QACH,IAAI,CAAC,WAAW,CAAC,KAAK,EAAE,CAAC;QACzB,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,CAAC;QACrB,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;IACtB,CAAC;IACD,SAAS,CAAC,KAAY;QACpB,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,IAAI,GAAI,KAAK,CAAC,MAA4B,CAAC,KAAK,CAAC;IACtE,CAAC;IACD,cAAc;QACZ,IAAI,CAAC,iBAAiB;aACnB,gBAAgB,EAAE;aAClB,SAAS,CAAC,CAAC,IAAkB,EAAE,EAAE,CAAC,CAAC,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,CAAC,CAAC;IACjE,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,WAAW;aACb,WAAW,EAAE;aACb,SAAS,CAAC,CAAC,IAAY,EAAE,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,CAAC,CAAC;QACpD,IAAI,CAAC,KAAK,EAAE,CAAC;IACf,CAAC;IAED,QAAQ;QACN,IAAI,OAAO,GAAS,EAAE,EAAE,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,WAAW,EAAE,IAAI,EAAE,CAAC;QACjE,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;QAC5B,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;QAC1B,IAAI,CAAC,KAAK,CAAC,UAAU,EAAE,CAAC;IAC1B,CAAC;IAED,WAAW,CAAC,GAAc;QACxB,KAAK,IAAI,KAAK,IAAI,GAAG;YACnB,IAAI,CAAC,WAAW;iBACb,UAAU,CAAC,KAAK,CAAC,EAAE,CAAC;iBACpB,SAAS,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAC;QAC1C,IAAI,CAAC,KAAK,EAAE,CAAC;QACb,IAAI,CAAC,QAAQ,EAAE,CAAC;IAClB,CAAC;IAED,SAAS,CAAC,GAAc;QACtB,KAAK,IAAI,KAAK,IAAI,GAAG;YACnB,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAC;QAC1E,IAAI,CAAC,KAAK,EAAE,CAAC;QACb,IAAI,CAAC,QAAQ,EAAE,CAAC;IAClB,CAAC;IAED,SAAS,CAAC,EAAU;QAClB,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,EAAE;YACzB,IAAI,EAAE,IAAI,CAAC,CAAC,EAAE,EAAE;gBACd,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC,KAAK,CAAC;gBAC1B,IAAI,CAAC,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC,WAAW,CAAC;gBACtC,IAAI,CAAC,WAAW;qBACb,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC;qBACrB,SAAS,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAC;gBACxC,IAAI,CAAC,IAAI,GAAG,IAAI,iDAAI,EAAE,CAAC;aACxB;QACH,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,KAAK,EAAE,CAAC;IACf,CAAC;IAED,SAAS,CAAC,GAAc;QACtB,IAAI,OAAO,GAAG,IAAI,KAAK,EAAQ,CAAC;QAChC,KAAK,IAAI,KAAK,IAAI,GAAG;YAAE,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAC3C,IAAI,CAAC,KAAK,GAAG,OAAO,CAAC;QACrB,IAAI,CAAC,cAAc,EAAE,CAAC;QACtB,GAAG,CAAC,KAAK,EAAE,CAAC;QACZ,IAAI,CAAC,KAAK,EAAE,CAAC;QACb,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;IACrB,CAAC;;kFArFU,iBAAiB;iGAAjB,iBAAiB;kEAQjB,gEAAQ;;;;qFAVR,CAAC,oEAAY,EAAE,8EAAiB,CAAC;QCV9C,yEAAoB;QAAA,gEAAK;QAAA,4DAAM;QAC/B,6GACE;QAmBF,yMACE;QAYF,2EACE;QACA,2EACE;QAAA,2GAAsC;QACtC,2GACE;QAEJ,qEAAe;QAGf,2EACE;QAAA,6GAAsC;QACtC,6GACE;QAUJ,qEAAe;QAGf,4EACE;QAAA,6GAAsC;QACtC,6GACE;QAiBJ,qEAAe;QAGf,4EACE;QAAA,6GAAsC;QACtC,6GACE;QAyBJ,qEAAe;QAEf,8GAAuD;QACvD,8GAKC;QACH,4DAAQ;;;QAvHoB,0DAA0B;QAA1B,6EAA0B;QAiCrC,0DAAoB;QAApB,iFAAoB;QA+EhB,2DAAmC;QAAnC,iGAAmC;QAKpD,0DAA+C;QAA/C,kGAA+C;;6FD1GtC,iBAAiB;cAL7B,uDAAS;eAAC;gBACT,WAAW,EAAE,0BAA0B;gBACvC,SAAS,EAAE,CAAC,uBAAuB,CAAC;gBACpC,SAAS,EAAE,CAAC,oEAAY,EAAE,8EAAiB,CAAC;aAC7C;;kBASE,uDAAS;mBAAC,gEAAQ;;;;;;;;;;;;;;AEpBrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAsE;AACiB;AAC3B;AACQ;AACI;AAC/B;AACc;AAEhB;AACE;AAC2B;AAC7B;;;AAEvC,MAAM,MAAM,GAAW;IACrB,EAAE,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,mDAAa,EAAE,WAAW,EAAE,CAAC,mDAAS,CAAC,EAAE;IAChE,EAAE,IAAI,EAAE,OAAO,EAAE,SAAS,EAAE,qDAAc,EAAE;IAC5C,EAAE,IAAI,EAAE,eAAe,EAAE,SAAS,EAAE,gFAAiB,EAAE;IACvD,EAAE,IAAI,EAAE,aAAa,EAAE,SAAS,EAAE,kFAAiB,EAAE;IACrD,EAAE,IAAI,EAAE,YAAY,EAAE,SAAS,EAAE,oFAAmB,EAAE;IACtD;QACE,IAAI,EAAE,kBAAkB;QACxB,SAAS,EAAE,mGAAuB;KACnC;IACD,EAAE,IAAI,EAAE,MAAM,EAAE,SAAS,EAAE,gFAAiB,EAAE;IAC9C,EAAE,IAAI,EAAE,QAAQ,EAAE,SAAS,EAAE,wEAAe,EAAE;IAE9C,EAAE,IAAI,EAAE,IAAI,EAAE,UAAU,EAAE,EAAE,EAAE;CAC/B,CAAC;AAMK,MAAM,gBAAgB;;+FAAhB,gBAAgB;0JAAhB,gBAAgB,kBAHlB,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,EAC7B,4DAAY;mIAEX,gBAAgB,uFAFjB,4DAAY;6FAEX,gBAAgB;cAJ5B,sDAAQ;eAAC;gBACR,OAAO,EAAE,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;gBACvC,OAAO,EAAE,CAAC,4DAAY,CAAC;aACxB;;;;;;;;;;;;;;AChCD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0C;;;;;;;;;ICGtC,0EACG;IAD0C,4SAAkB;IAC5D,iEAAM;IAAA,4DACR;;;IAMD,8EAKG;IAAA,wEAAa;IAAA,4DACf;;ADNE,MAAM,YAAY;IAGvB,YAAoB,qBAA4C;QAA5C,0BAAqB,GAArB,qBAAqB,CAAuB;QAC9D,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC,CAAC,CAAC;IACpE,CAAC;IAED,MAAM;QACJ,IAAI,CAAC,qBAAqB,CAAC,MAAM,EAAE,CAAC;IACtC,CAAC;;wEATU,YAAY;4FAAZ,YAAY;QCXzB,8EACE;QAAA,qFACE;QAAA,0EAAyD;QAAA,+DAAI;QAAA,4DAAO;QACpE,0GACG;QAEH,qEAAoC;QAEpC,0EAAyD;QAAA,uDAEvD;QAAA,4DAAO;QACT,kHAKG;QAEL,4DAAkB;QACpB,4DAAc;QAEd,yEACE;QAAA,+EAA4C;QAC9C,4DAAM;;QApBI,0DAAY;QAAZ,0EAAY;QAKuC,0DAEvD;QAFuD,4GAEvD;QAEA,0DAAgB;QAAhB,uGAAgB;;6FDDT,YAAY;cALxB,uDAAS;eAAC;gBACT,QAAQ,EAAE,KAAK;gBACf,WAAW,EAAE,oBAAoB;gBACjC,SAAS,EAAE,CAAC,sBAAsB,CAAC;aACpC;;;;;;;;;;;;;;AEVD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAsE;AACiB;AAC3B;AACQ;AACiB;AACb;AACd;AACA;AACQ;AACS;AAE5B;AACS;AAEsB;AAC1B;AACb;AACE;AACsC;AACpB;AACO;AACX;AACA;AACQ;AACE;AACR;AACF;AACe;AACb;AACI;AACJ;AACI;AACG;AACL;;AAiDpD,MAAM,SAAS;;wFAAT,SAAS,cAFR,4DAAY;4IAEb,SAAS,mBAZT;QACT;YACE,OAAO,EAAE,6DAAe;YACxB,UAAU,EAAE,wDAAc;YAC1B,KAAK,EAAE,IAAI;YACX,IAAI,EAAE,CAAC,gEAAqB,CAAC;SAC9B;QACD,EAAE,OAAO,EAAE,sEAAiB,EAAE,QAAQ,EAAE,wDAAc,EAAE,KAAK,EAAE,IAAI,EAAE;QACrE,EAAE,OAAO,EAAE,sEAAiB,EAAE,QAAQ,EAAE,0DAAgB,EAAE,KAAK,EAAE,IAAI,EAAE;KACxE,YA3CQ;YACP,uEAAa;YACb,kEAAmB;YACnB,qEAAgB;YAChB,qEAAgB;YAChB,6FAAuB;YACvB,yEAAe;YACf,gFAAkB;YAClB,qEAAa;YACb,qEAAa;YACb,6EAAiB;YACjB,+EAAkB;YAClB,uEAAc;YACd,qEAAa;YACb,oFAAoB;YACpB,uEAAc;YACd,2EAAgB;YAChB,uEAAc;YACd,2EAAgB;YAChB,8EAAiB;YACjB,yEAAe;YACf,0DAAW;SACZ;mIAwBU,SAAS,mBAtBlB,4DAAY;QACZ,oDAAa;QACb,sDAAc;QACd,oFAAmB;QACnB,mGAAuB;QACvB,iGAAgB;QAChB,kFAAiB;QACjB,gFAAiB;QACjB,wEAAe,aA/Bf,uEAAa;QACb,kEAAmB;QACnB,qEAAgB;QAChB,qEAAgB;QAChB,6FAAuB;QACvB,yEAAe;QACf,gFAAkB;QAClB,qEAAa;QACb,qEAAa;QACb,6EAAiB;QACjB,+EAAkB;QAClB,uEAAc;QACd,qEAAa;QACb,oFAAoB;QACpB,uEAAc;QACd,2EAAgB;QAChB,uEAAc;QACd,2EAAgB;QAChB,8EAAiB;QACjB,yEAAe;QACf,0DAAW;6FAyBF,SAAS;cA/CrB,sDAAQ;eAAC;gBACR,OAAO,EAAE;oBACP,uEAAa;oBACb,kEAAmB;oBACnB,qEAAgB;oBAChB,qEAAgB;oBAChB,6FAAuB;oBACvB,yEAAe;oBACf,gFAAkB;oBAClB,qEAAa;oBACb,qEAAa;oBACb,6EAAiB;oBACjB,+EAAkB;oBAClB,uEAAc;oBACd,qEAAa;oBACb,oFAAoB;oBACpB,uEAAc;oBACd,2EAAgB;oBAChB,uEAAc;oBACd,2EAAgB;oBAChB,8EAAiB;oBACjB,yEAAe;oBACf,0DAAW;iBACZ;gBACD,YAAY,EAAE;oBACZ,4DAAY;oBACZ,oDAAa;oBACb,sDAAc;oBACd,oFAAmB;oBACnB,mGAAuB;oBACvB,iGAAgB;oBAChB,kFAAiB;oBACjB,gFAAiB;oBACjB,wEAAe;iBAChB;gBACD,SAAS,EAAE;oBACT;wBACE,OAAO,EAAE,6DAAe;wBACxB,UAAU,EAAE,wDAAc;wBAC1B,KAAK,EAAE,IAAI;wBACX,IAAI,EAAE,CAAC,gEAAqB,CAAC;qBAC9B;oBACD,EAAE,OAAO,EAAE,sEAAiB,EAAE,QAAQ,EAAE,wDAAc,EAAE,KAAK,EAAE,IAAI,EAAE;oBACrE,EAAE,OAAO,EAAE,sEAAiB,EAAE,QAAQ,EAAE,0DAAgB,EAAE,KAAK,EAAE,IAAI,EAAE;iBACxE;gBACD,SAAS,EAAE,CAAC,4DAAY,CAAC;aAC1B;;;;;;;;;;;;;;AC/ED;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAsE;AAEb;;;;;;;;;;ICDrD,kFACE;IAAA,mFACG;IAAA,uDACD;IAAA,iEAAW;IACb,4DAAgB;IAClB,4DAAe;;;IAJkB,0DAAoC;IAApC,wJAAoC;IAChE,0DACD;IADC,sFACD;;ADKD,MAAM,mBAAmB;IAM9B,YACU,qBAA4C,EAC5C,iBAAoC;QADpC,0BAAqB,GAArB,qBAAqB,CAAuB;QAC5C,sBAAiB,GAAjB,iBAAiB,CAAmB;QAJ9C,UAAK,GAAY,IAAI,CAAC;QAMpB,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC,CAAC,CAAC;IACpE,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,cAAc,EAAE,CAAC;IACxB,CAAC;IAED,cAAc;QACZ,IAAI,CAAC,iBAAiB;aACnB,gBAAgB,EAAE;aAClB,SAAS,CAAC,CAAC,IAAkB,EAAE,EAAE,CAAC,CAAC,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,CAAC,CAAC;IACjE,CAAC;;sFArBU,mBAAmB;mGAAnB,mBAAmB,+GAFnB,CAAC,8EAAiB,CAAC;QCThC,2EACE;QAAA,iFAAgB;QAAA,sEAAW;QAAA,4DAAiB;QAC5C,mFACE;QAAA,iIACE;QAKJ,4DAAmB;QACnB,8EAAsC;QACxC,4DAAW;;QARmB,0DAA8B;QAA9B,mFAA8B;;6FDQ/C,mBAAmB;cAL/B,uDAAS;eAAC;gBACT,QAAQ,EAAE,gBAAgB;gBAC1B,WAAW,EAAE,2BAA2B;gBACxC,SAAS,EAAE,CAAC,8EAAiB,CAAC;aAC/B;;;;;;;;;;;;;;AEVD;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0C;AACH;;;;AAMhC,MAAM,aAAa;IAItB,YAAoB,WAAwB;QAAxB,gBAAW,GAAX,WAAW,CAAa;QAH5C,YAAO,GAAG,KAAK,CAAC;IAGgC,CAAC;IAEjD,QAAQ;QACJ,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACpB,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC,IAAI,CAAC,4DAAK,EAAE,CAAC,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE;YACtD,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;YACrB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACvB,CAAC,CAAC,CAAC;IACP,CAAC;;0EAZQ,aAAa;6FAAb,aAAa;QCP1B,sEACE;QAAA,sEAAsB;QACxB,4DAAM;;6FDKO,aAAa;cADzB,uDAAS;eAAC,EAAE,WAAW,EAAE,qBAAqB,EAAE;;;;;;;;;;;;;;AENjD;AAAA;AAAA;AAAA;AAAiC;;;;;;;;;;;;;ACAjC;AAAA;AAAA;AAAA;AAAkC;;;;;;;;;;;;;ACAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AAEkB;AAC7B;;;;;;;ICe3B,sEAAwC;IAAA,+EAAoB;IAAA,4DAAM;;;IADpE,0EACE;IAAA,kHAAwC;IAC1C,4DAAM;;;IADC,0DAAkC;IAAlC,mGAAkC;;;IAYvC,sEAAwC;IAAA,+EAAoB;IAAA,4DAAM;;;IADpE,0EACE;IAAA,kHAAwC;IAC1C,4DAAM;;;IADC,0DAAkC;IAAlC,mGAAkC;;;IAIzC,sEAGQ;;;IAGV,0EACE;IAAA,uDACF;IAAA,4DAAM;;;IADJ,0DACF;IADE,wFACF;;;ADlCD,MAAM,cAAc;IAQzB,YACU,WAAwB,EACxB,KAAqB,EACrB,MAAc,EACd,qBAA4C;QAH5C,gBAAW,GAAX,WAAW,CAAa;QACxB,UAAK,GAAL,KAAK,CAAgB;QACrB,WAAM,GAAN,MAAM,CAAQ;QACd,0BAAqB,GAArB,qBAAqB,CAAuB;QAVtD,YAAO,GAAG,KAAK,CAAC;QAChB,cAAS,GAAG,KAAK,CAAC;QAElB,UAAK,GAAG,EAAE,CAAC;QACX,SAAI,GAAG,IAAI,CAAC;QAQV,IAAI,IAAI,CAAC,qBAAqB,CAAC,SAAS,EAAE;YACxC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;SAC7B;IACH,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YACtC,QAAQ,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACnC,QAAQ,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;SACpC,CAAC,CAAC;QAEH,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,WAAW,CAAC,WAAW,CAAC,IAAI,GAAG,CAAC;IACvE,CAAC;IAED,IAAI,CAAC;QACH,OAAO,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC;IACjC,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QAEtB,IAAI,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE;YAC1B,OAAO;SACR;QAED,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACpB,IAAI,CAAC,qBAAqB;aACvB,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,QAAQ,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC;aACnD,IAAI,CAAC,4DAAK,EAAE,CAAC;aACb,SAAS,CAAC;YACT,IAAI,EAAE,GAAG,EAAE;gBACT,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;YACzC,CAAC;YACD,KAAK,EAAE,CAAC,KAAK,EAAE,EAAE;gBACf,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;gBACnB,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;YACvB,CAAC;SACF,CAAC,CAAC;IACP,CAAC;;4EApDU,cAAc;8FAAd,cAAc;QCR3B,yEACE;QAAA,yEACE;QAAA,0EAAc;QAAA,gEACd;QAAA,2EACF;QAAA,4DAAM;QACN,yEACE;QAAA,wEAAwB;QAAA,kGAAuC;QAAA,4DAAK;QACpE,yEACE;QAAA,0EACE;QAD4B,0IAAY,cAAU,IAAC;QACnD,0EACE;QAAA,4EAAsB;QAAA,oEAAQ;QAAA,4DAAQ;QACtC,uEAMA;QAAA,4GACE;QAEJ,4DAAM;QACN,0EACE;QAAA,6EAAsB;QAAA,oEAAQ;QAAA,4DAAQ;QACtC,wEAMA;QAAA,4GACE;QAEJ,4DAAM;QACN,8EACE;QAAA,+GAGC;QACD,mEACF;QAAA,4DAAS;QACT,6GACE;QAEJ,4DAAO;QACT,4DAAM;QACR,4DAAM;QACR,4DAAM;;QAtCM,0DAAuB;QAAvB,oFAAuB;QAOvB,0DAA4D;QAA5D,kLAA4D;QAEzD,0DAAsC;QAAtC,wGAAsC;QAUzC,0DAA4D;QAA5D,mLAA4D;QAEzD,0DAAsC;QAAtC,wGAAsC;QAIrC,0DAAoB;QAApB,iFAAoB;QAExB,0DAAe;QAAf,6EAAe;QAKd,0DAAa;QAAb,2EAAa;;6FDhCb,cAAc;cAD1B,uDAAS;eAAC,EAAE,WAAW,EAAE,sBAAsB,EAAE;;;;;;;;;;;;;;AEHlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AAEC;;;;;;;;;ICE3C,qFAKE;IAFA,kXAAyB;IAEzB,mFACG;IAAA,sFAA8B;IAAA,uDAE7B;IAAA,4DAAmB;IAAA,4DACtB;IACH,4DAAkB;;;;IARhB,gHAAoD;IAI/B,0DAAW;IAAX,uEAAW;IAAC,0DAE7B;IAF6B,iFAE7B;;ADTd,+CAAU,CAAC;AAMJ,MAAM,iBAAiB;IAoG5B,YAAY,EAAe;QAhG3B,oBAAe,GAAa,EAAE,CAAC;QAC/B,mBAAc,GAAG,CAAC,CAAC;QACnB,uBAAkB,GAAG,IAAI,CAAC;QAC1B,aAAQ,GAAG,KAAK,CAAC;QAEjB,cAAS,GAAe;YACtB;gBACE,EAAE,EAAE,CAAC;gBACL,QAAQ,EAAE,+DAA+D;aAC1E;YACD;gBACE,EAAE,EAAE,CAAC;gBACL,QAAQ,EAAE,4CAA4C;aACvD;YACD;gBACE,EAAE,EAAE,CAAC;gBACL,QAAQ,EACN,+EAA+E;aAClF;YACD;gBACE,EAAE,EAAE,CAAC;gBACL,QAAQ,EACN,uHAAuH;aAC1H;SACF,CAAC;QAEF,YAAO,GAAa;YAClB;gBACE,UAAU,EAAE,CAAC;gBACb,MAAM,EAAE,kDAAkD;gBAC1D,OAAO,EAAE,IAAI;aACd;YACD;gBACE,UAAU,EAAE,CAAC;gBACb,MAAM,EAAE,6CAA6C;gBACrD,OAAO,EAAE,KAAK;aACf;YACD;gBACE,UAAU,EAAE,CAAC;gBACb,MAAM,EAAE,2BAA2B;gBACnC,OAAO,EAAE,IAAI;aACd;YACD;gBACE,UAAU,EAAE,CAAC;gBACb,MAAM,EAAE,mCAAmC;gBAC3C,OAAO,EAAE,KAAK;aACf;YACD;gBACE,UAAU,EAAE,CAAC;gBACb,MAAM,EACJ,uFAAuF;gBACzF,OAAO,EAAE,IAAI;aACd;YACD;gBACE,UAAU,EAAE,CAAC;gBACb,MAAM,EAAE,6BAA6B;gBACrC,OAAO,EAAE,KAAK;aACf;YACD;gBACE,UAAU,EAAE,CAAC;gBACb,MAAM,EAAE,YAAY;gBACpB,OAAO,EAAE,KAAK;aACf;YACD;gBACE,UAAU,EAAE,CAAC;gBACb,MAAM,EAAE,aAAa;gBACrB,OAAO,EAAE,IAAI;aACd;YACD;gBACE,UAAU,EAAE,CAAC;gBACb,MAAM,EAAE,aAAa;gBACrB,OAAO,EAAE,KAAK;aACf;YACD;gBACE,UAAU,EAAE,CAAC;gBACb,MAAM,EAAE,YAAY;gBACpB,OAAO,EAAE,KAAK;aACf;YACD;gBACE,UAAU,EAAE,CAAC;gBACb,MAAM,EACJ,iGAAiG;gBACnG,OAAO,EAAE,KAAK;aACf;YACD;gBACE,UAAU,EAAE,CAAC;gBACb,MAAM,EAAE,sCAAsC;gBAC9C,OAAO,EAAE,IAAI;aACd;YACD;gBACE,UAAU,EAAE,CAAC;gBACb,MAAM,EAAE,wCAAwC;gBAChD,OAAO,EAAE,KAAK;aACf;SACF,CAAC;IAE4B,CAAC;IAE/B,QAAQ;QACN,IAAI,CAAC,cAAc,EAAE,CAAC;IACxB,CAAC;IAED,cAAc;QACZ,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC;QACnC,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QACtD,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;IACxB,CAAC;IAED,WAAW;QACT,OAAO,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,CAAC;IAC3E,CAAC;IAED,UAAU,CAAC,QAAkB;QAC3B,OAAO,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,UAAU,IAAI,QAAQ,CAAC,EAAE,CAAC,CAAC;IACjE,CAAC;IAED,OAAO;QACL,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;YAClB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;YACrB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;YAE7B,IAAI,KAAK,GAAG,UAAU,CACpB,GAAG,EAAE,CAAC,IAAI,CAAC,cAAc,EAAE,EAC3B,IAAI,CAAC,kBAAkB,CACxB,CAAC;SACH;IACH,CAAC;;kFAlIU,iBAAiB;iGAAjB,iBAAiB;QCb9B,2EACE;QAAA,iFAAgB;QAAA,uDAAuB;QAAA,4DAAiB;QACxD,mFACE;QAAA,qFAIE;QAAA,2FACE;QAAA,qIAKE;QAMJ,4DAAqB;QACvB,4DAAkB;QACpB,4DAAmB;QACrB,4DAAW;;QArBO,0DAAuB;QAAvB,sFAAuB;QAMP,0DAAkB;QAAlB,2EAAkB;QAE1C,0DAAwD;QAAxD,wFAAwD;;6FDIrD,iBAAiB;cAJ7B,uDAAS;eAAC;gBACT,WAAW,EAAE,4BAA4B;gBACzC,SAAS,EAAE,CAAC,4BAA4B,CAAC;aAC1C;;;;;;;;;;;;;;AEZD;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0C;AACH;;;;AAMhC,MAAM,eAAe;IAI1B,YAAoB,WAAwB;QAAxB,gBAAW,GAAX,WAAW,CAAa;QAH5C,YAAO,GAAG,KAAK,CAAC;IAG+B,CAAC;IAEhD,QAAQ;QACN,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACpB,IAAI,CAAC,WAAW;aACb,MAAM,EAAE;aACR,IAAI,CAAC,4DAAK,EAAE,CAAC;aACb,SAAS,CAAC,CAAC,KAAK,EAAE,EAAE;YACnB,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;YACrB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACrB,CAAC,CAAC,CAAC;IACP,CAAC;;8EAfU,eAAe;+FAAf,eAAe;QCP5B,sEACE;QAAA,sEAAsB;QACxB,4DAAM;;6FDKO,eAAe;cAD3B,uDAAS;eAAC,EAAE,WAAW,EAAE,uBAAuB,EAAE;;;;;;;;;;;;;;AELnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AACuB;;;;;;;AAalE,MAAM,gBAAgB;IAI3B,YACS,SAAyC,EAChB,IAAU;QADnC,cAAS,GAAT,SAAS,CAAgC;QAChB,SAAI,GAAJ,IAAI,CAAM;QAL5C,YAAO,GAAG,KAAK,CAAC;QAChB,aAAQ,GAAG,KAAK,CAAC;IAKd,CAAC;IAEJ,SAAS;QACP,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;IACzB,CAAC;;gFAXU,gBAAgB,0MAMjB,wEAAe;gGANd,gBAAgB;QCf7B,wEAAqB;QAAA,uDAAc;QAAA,4DAAK;QACxC,yEACE;QAAA,oEAAG;QAAA,uDAAoB;QAAA,4DAAI;QAC7B,4DAAM;QACN,yEACE;QAAA,0EACE;QAAA,kFAAoC;QAAtB,4LAAqB;QAAC,2EAAgB;QAAA,4DAAe;QACrE,4DAAU;QACV,4EAOE;QAAA,qEACF;QAAA,4DAAS;QACX,4DAAM;;QAjBe,0DAAc;QAAd,+EAAc;QAE9B,0DAAoB;QAApB,qFAAoB;QAIP,0DAAqB;QAArB,gFAAqB;QAKnC,0DAAyB;QAAzB,kFAAyB;;6FDIhB,gBAAgB;cAX5B,uDAAS;eAAC;gBACT,QAAQ,EAAE,oBAAoB;gBAC9B,WAAW,EAAE,yBAAyB;gBACtC,MAAM,EAAE;oBACN;;;;KAIC;iBACF;aACF;;sBAOI,oDAAM;uBAAC,wEAAe;;;;;;;;;;;;;;AEpB3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA4D;AAC0B;AAE5C;;;;;;ICJ1C,sFACE;IAAA,6FACE;IAAA,kFAAiB;IAAA,uDAAgB;IAAA,4DAAkB;IACrD,4DAA6B;IAC7B,oEAAG;IAAA,uDAAwC;;IAAA,4DAAI;IAC/C,4EACE;IADwC,4WAA0B;IAClE,kEACF;IAAA,4DAAS;IACX,4DAAsB;;;IAND,0DAAgB;IAAhB,8EAAgB;IAEhC,0DAAwC;IAAxC,yKAAwC;;ADStC,MAAM,iBAAiB;IAM5B,YACS,MAAiB,EAChB,MAAc,EACtB,WAA2B;QAFpB,WAAM,GAAN,MAAM,CAAW;QAChB,WAAM,GAAN,MAAM,CAAQ;QANxB,YAAO,GAAG,KAAK,CAAC;QAChB,aAAQ,GAAG,WAAW,CAAC;QAQrB,IAAI,CAAC,EAAE,GAAG,MAAM,CAAC,QAAQ,CAAC,WAAW,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;IAC/D,CAAC;IAED,UAAU,CAAC,IAAU;QACnB,MAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,iGAAgB,EAAE;YACnD,QAAQ,EAAE,OAAO;YACjB,IAAI,EAAE,IAAI;SACX,CAAC,CAAC;QAEH,SAAS,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,CAAC,MAAe,EAAE,EAAE;YACpD,OAAO,CAAC,GAAG,CAAC,wBAAwB,EAAE,MAAM,CAAC,CAAC;QAChD,CAAC,CAAC,CAAC;IACL,CAAC;IAED,QAAQ,KAAI,CAAC;;kFAzBF,iBAAiB;iGAAjB,iBAAiB,+GAFjB,CAAC,oEAAY,CAAC;QCX3B,6IACE;;QADmB,8EAA0B;;6FDalC,iBAAiB;cAL7B,uDAAS;eAAC;gBACT,QAAQ,EAAE,gBAAgB;gBAC1B,WAAW,EAAE,4BAA4B;gBACzC,SAAS,EAAE,CAAC,oEAAY,CAAC;aAC1B;;;;;;;;;;;;;;AEZD;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;IACjB,MAAM,EAAE,uBAAuB;CAChC,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;AChBnE;AAAA;AAAA;AAAA;AAAA;AAA+C;AAIU;;;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IACxB,oEAAc,EAAE,CAAC;CACpB;AAED,2EAAwB,gBAAgB,CAAC,0DAAU;KAC9C,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { AuthenticationService } from '@app/_services';\r\n\r\nexport function appInitializer(authenticationService: AuthenticationService) {\r\n    return () => new Promise(resolve => {\r\n        // attempt to refresh token on app start up to auto authenticate\r\n        authenticationService.refreshToken()\r\n            .subscribe()\r\n            .add(resolve);\r\n    });\r\n}","import { Injectable } from '@angular/core';\r\nimport {\r\n  Router,\r\n  CanActivate,\r\n  ActivatedRouteSnapshot,\r\n  RouterStateSnapshot,\r\n} from '@angular/router';\r\n\r\nimport { AuthenticationService } from '@app/_services';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class AuthGuard implements CanActivate {\r\n  constructor(\r\n    private router: Router,\r\n    private authenticationService: AuthenticationService\r\n  ) {}\r\n\r\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\r\n    const user = this.authenticationService.userValue;\r\n    if (user) {\r\n      // logged in so return true\r\n      return true;\r\n    } else {\r\n      // not logged in so redirect to login page with the return url\r\n      this.router.navigate(['/login'], {\r\n        queryParams: { returnUrl: state.url },\r\n      });\r\n      return false;\r\n    }\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\n\r\nimport { AuthenticationService } from '@app/_services';\r\n\r\n@Injectable()\r\nexport class ErrorInterceptor implements HttpInterceptor {\r\n    constructor(private authenticationService: AuthenticationService) { }\r\n\r\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        return next.handle(request).pipe(catchError(err => {\r\n            if ([401, 403].includes(err.status) && this.authenticationService.userValue) {\r\n                // auto logout if 401 or 403 response returned from api\r\n                this.authenticationService.logout();\r\n            }\r\n\r\n            const error = (err && err.error && err.error.message) || err.statusText;\r\n            console.error(err);\r\n            return throwError(error);\r\n        }))\r\n    }\r\n}","export * from './app.initializer';\r\nexport * from './auth.guard';\r\nexport * from './error.interceptor';\r\nexport * from './jwt.interceptor';","import { Injectable } from '@angular/core';\r\nimport {\r\n  HttpRequest,\r\n  HttpHandler,\r\n  HttpEvent,\r\n  HttpInterceptor,\r\n} from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { environment } from '@environments/environment';\r\nimport { AuthenticationService } from '@app/_services';\r\n\r\n@Injectable()\r\nexport class JwtInterceptor implements HttpInterceptor {\r\n  constructor(private authenticationService: AuthenticationService) {}\r\n\r\n  intercept(\r\n    request: HttpRequest<any>,\r\n    next: HttpHandler\r\n  ): Observable<HttpEvent<any>> {\r\n    // add auth header with jwt if user is logged in and request is to the api url\r\n    const user = this.authenticationService.userValue;\r\n    const isLoggedIn = user && user.jwtToken;\r\n    const isApiUrl = request.url.startsWith(environment.apiUrl);\r\n    if (isLoggedIn && isApiUrl) {\r\n      request = request.clone({\r\n        setHeaders: { Authorization: `Bearer ${user.jwtToken}` },\r\n      });\r\n    }\r\n\r\n    return next.handle(request);\r\n  }\r\n}\r\n","export class Categories {\r\n  id: number;\r\n  name: string;\r\n}\r\n","export * from './test';\r\nexport * from './user';\r\nexport * from './categories';\r\nexport * from './user-answer';\r\nexport * from './user-test';\r\nexport * from './question';\r\n","export class Question {\r\n  id?: number;\r\n  testId?: number;\r\n  question: string;\r\n}\r\n","import { NumberValueAccessor } from '@angular/forms';\r\n\r\nexport class Test {\r\n  id?: number;\r\n  categoryId?: number;\r\n  title: string;\r\n  description: string;\r\n}\r\n","export class UserAnswer {\r\n  id: number;\r\n  userId: number;\r\n  questionId: number;\r\n  answer: string;\r\n  correct: boolean;\r\n}\r\n","export class UserTest {\r\n  id: number;\r\n  userId: number;\r\n  testId: number;\r\n  score: string;\r\n  time: string;\r\n}\r\n","export class User {\r\n  id: number;\r\n  username: string;\r\n  password: string;\r\n  firstName: string;\r\n  lastName: string;\r\n  admin?: string;\r\n  jwtToken?: string;\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\r\nimport { environment } from '@environments/environment';\r\nimport { User } from '@app/_models';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class AuthenticationService {\r\n    private userSubject: BehaviorSubject<User>;\r\n    public user: Observable<User>;\r\n\r\n    constructor(\r\n        private router: Router,\r\n        private http: HttpClient\r\n    ) {\r\n        this.userSubject = new BehaviorSubject<User>(null);\r\n        this.user = this.userSubject.asObservable();\r\n    }\r\n\r\n    public get userValue(): User {\r\n        return this.userSubject.value;\r\n    }\r\n\r\n    login(username: string, password: string) {\r\n        return this.http.post<any>(`${environment.apiUrl}/users/authenticate`, { username, password }, { withCredentials: true })\r\n            .pipe(map(user => {\r\n                this.userSubject.next(user);\r\n                this.startRefreshTokenTimer();\r\n                return user;\r\n            }));\r\n    }\r\n\r\n    logout() {\r\n        this.http.post<any>(`${environment.apiUrl}/users/revoke-token`, {}, { withCredentials: true }).subscribe();\r\n        this.stopRefreshTokenTimer();\r\n        this.userSubject.next(null);\r\n        this.router.navigate(['/login']);\r\n    }\r\n\r\n    refreshToken() {\r\n        return this.http.post<any>(`${environment.apiUrl}/users/refresh-token`, {}, { withCredentials: true })\r\n            .pipe(map((user) => {\r\n                this.userSubject.next(user);\r\n                this.startRefreshTokenTimer();\r\n                return user;\r\n            }));\r\n    }\r\n\r\n    // helper methods\r\n\r\n    private refreshTokenTimeout;\r\n\r\n    private startRefreshTokenTimer() {\r\n        // parse json object from base64 encoded jwt token\r\n        const jwtToken = JSON.parse(atob(this.userValue.jwtToken.split('.')[1]));\r\n\r\n        // set a timeout to refresh the token a minute before it expires\r\n        const expires = new Date(jwtToken.exp * 1000);\r\n        const timeout = expires.getTime() - Date.now() - (60 * 1000);\r\n        this.refreshTokenTimeout = setTimeout(() => this.refreshToken().subscribe(), timeout);\r\n    }\r\n\r\n    private stopRefreshTokenTimer() {\r\n        clearTimeout(this.refreshTokenTimeout);\r\n    }\r\n}","import { Categories } from './../_models/categories';\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { environment } from '@environments/environment';\r\n\r\n@Injectable()\r\nexport class CategoriesService {\r\n  private url = environment.apiUrl + '/api/categories';\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  getAllCategories() {\r\n    return this.http.get(this.url);\r\n  }\r\n\r\n  getCategories(id: number) {\r\n    return this.http.get(this.url + '/' + id);\r\n  }\r\n\r\n  createCategories(categories: Categories) {\r\n    return this.http.post(this.url, categories);\r\n  }\r\n  updateCategories(categories: Categories) {\r\n    return this.http.put(this.url, categories);\r\n  }\r\n  deleteCategories(id: number) {\r\n    return this.http.delete(this.url + '/' + id);\r\n  }\r\n}\r\n","export * from './authentication.service';\r\nexport * from './user.service';\r\nexport * from './categories.service';\r\nexport * from './tests.service';\r\n","import { Test } from '../_models/test';\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { environment } from '@environments/environment';\r\n\r\n@Injectable()\r\nexport class TestsService {\r\n  private url = environment.apiUrl + '/api/tests';\r\n  private categoryUrl = environment.apiUrl + '/api/tests';\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  getAllTests() {\r\n    return this.http.get(this.url);\r\n  }\r\n\r\n  getTest(id: number) {\r\n    return this.http.get(this.url + '/' + id);\r\n  }\r\n\r\n  getTestsByCategoryId(id: number) {\r\n    return this.http.get(this.url + '/' + id);\r\n  }\r\n\r\n  getCategoryById(id: number) {\r\n    return this.http.get(this.categoryUrl + '/' + id);\r\n  }\r\n\r\n  createTest(test: Test) {\r\n    return this.http.post(this.url, test);\r\n  }\r\n\r\n  updateTest(test: Test) {\r\n    return this.http.put(this.url, test);\r\n  }\r\n  deleteTest(id: number) {\r\n    return this.http.delete(this.url + '/' + id);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\nimport { environment } from '@environments/environment';\r\nimport { User, Test, Question } from '@app/_models';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class UserService {\r\n  constructor(private http: HttpClient) {}\r\n\r\n  getAll() {\r\n    return this.http.get<User[]>(`${environment.apiUrl}/users`);\r\n  }\r\n}\r\n","import { AuthenticationService } from './../../_services/authentication.service';\r\nimport { User } from './../../_models/user';\r\nimport { Categories } from './../../_models/categories';\r\nimport { CategoriesService } from './../../_services/categories.service';\r\nimport { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { MatTable } from '@angular/material/table';\r\n\r\n@Component({\r\n  templateUrl: 'categories-edit.component.html',\r\n  styleUrls: ['./../style-admin.scss'],\r\n  providers: [CategoriesService],\r\n})\r\nexport class CategoriesEditComponent implements OnInit {\r\n  displayedColumns: string[] = ['position', 'name'];\r\n  category: Categories = new Categories();\r\n  categories: Categories[];\r\n  user: User;\r\n  clickedRows = new Set<Categories>();\r\n  newRows = new Set<Categories>();\r\n  isEdit = false;\r\n  @ViewChild(MatTable) table: MatTable<Categories>;\r\n\r\n  constructor(\r\n    private authenticationService: AuthenticationService,\r\n    private categoriesService: CategoriesService\r\n  ) {\r\n    this.authenticationService.user.subscribe((x) => (this.user = x));\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.loadCategories();\r\n    console.log(this.user);\r\n  }\r\n\r\n  clear() {\r\n    this.clickedRows.clear();\r\n    this.newRows.clear();\r\n    this.isEdit = false;\r\n  }\r\n\r\n  loadCategories() {\r\n    this.categoriesService\r\n      .getAllCategories()\r\n      .subscribe((data: Categories[]) => (this.categories = data));\r\n    this.clear();\r\n  }\r\n\r\n  clickAdd() {\r\n    let newItem: Categories = { id: null, name: null };\r\n    this.categories.unshift(newItem);\r\n    this.newRows.add(newItem);\r\n    this.table.renderRows();\r\n  }\r\n\r\n  clickDelete(set: Set<Categories>) {\r\n    for (let value of set)\r\n      this.categoriesService\r\n        .deleteCategories(value.id)\r\n        .subscribe((data) => this.loadCategories());\r\n    this.clear();\r\n    this.loadCategories();\r\n  }\r\n\r\n  clickSave(set: Set<Categories>) {\r\n    for (let value of set)\r\n      this.categoriesService\r\n        .updateCategories(value)\r\n        .subscribe((data) => this.loadCategories());\r\n    this.clear();\r\n    this.loadCategories();\r\n  }\r\n\r\n  onRowSave(id: number) {\r\n    let newItem: Categories;\r\n    this.newRows.forEach((m) => {\r\n      if (id == m.id) {\r\n        this.category.name = m.name;\r\n        this.categoriesService\r\n          .createCategories(this.category)\r\n          .subscribe((data) => this.loadCategories());\r\n        this.category = new Categories();\r\n      }\r\n    });\r\n    this.clear();\r\n  }\r\n\r\n  clickEdit(set: Set<Categories>) {\r\n    let forEdit = new Array<Categories>();\r\n    for (let value of set) forEdit.push(value);\r\n    this.categories = forEdit;\r\n    set.clear();\r\n    this.clear();\r\n    this.isEdit = true;\r\n  }\r\n}\r\n","<div class=\"header\">Categories</div>\r\n<div class=\"action-buttons\" *ngIf=\"!isEdit; else save\">\r\n  <button mat-raised-button color=\"primary\" (click)=\"clickAdd()\">Add</button>\r\n  <button\r\n    mat-flat-button\r\n    color=\"accent\"\r\n    [disabled]=\"!clickedRows.size\"\r\n    (click)=\"clickEdit(clickedRows)\"\r\n  >\r\n    Edit\r\n  </button>\r\n  <button\r\n    mat-flat-button\r\n    color=\"warn\"\r\n    [disabled]=\"!clickedRows.size\"\r\n    (click)=\"clickDelete(clickedRows)\"\r\n  >\r\n    Delete\r\n  </button>\r\n  <span>*To change items, click on rows to select </span>\r\n</div>\r\n<ng-template #save>\r\n  <div class=\"action-buttons\">\r\n    <button\r\n      mat-flat-button\r\n      color=\"accent\"\r\n      [disabled]=\"!clickedRows.size\"\r\n      (click)=\"clickSave(clickedRows)\"\r\n    >\r\n      Save\r\n    </button>\r\n  </div>\r\n</ng-template>\r\n\r\n<table mat-table [dataSource]=\"categories\" class=\"mat-elevation-z8 demo-table\">\r\n  <!-- Position Column -->\r\n  <ng-container matColumnDef=\"position\">\r\n    <th mat-header-cell *matHeaderCellDef>No.</th>\r\n    <td mat-cell *matCellDef=\"let element\">{{ element.id }}</td>\r\n  </ng-container>\r\n\r\n  <!-- Name Column -->\r\n  <ng-container matColumnDef=\"name\">\r\n    <th mat-header-cell *matHeaderCellDef>Name</th>\r\n    <td mat-cell *matCellDef=\"let element\">\r\n      <mat-form-field\r\n        class=\"example-form-field\"\r\n        appearance=\"fill\"\r\n        *ngIf=\"isEdit\"\r\n      >\r\n        <input matInput type=\"text\" [(ngModel)]=\"element.name\" />\r\n        <button\r\n          *ngIf=\"element.name\"\r\n          matSuffix\r\n          mat-icon-button\r\n          aria-label=\"Clear\"\r\n          (click)=\"value = ''\"\r\n        >\r\n          <mat-icon>close</mat-icon>\r\n        </button>\r\n      </mat-form-field>\r\n      <div class=\"add\" *ngIf=\"!isEdit && newRows.has(element)\">\r\n        <mat-form-field class=\"example-form-field\" appearance=\"fill\">\r\n          <input matInput type=\"text\" [(ngModel)]=\"element.name\" />\r\n        </mat-form-field>\r\n        <button\r\n          mat-flat-button\r\n          color=\"accent\"\r\n          [disabled]=\"!clickedRows.size\"\r\n          (click)=\"onRowSave(element.id)\"\r\n        >\r\n          Save\r\n        </button>\r\n      </div>\r\n\r\n      <p *ngIf=\"!isEdit && !newRows.has(element)\">\r\n        {{ element.name }}\r\n      </p>\r\n    </td>\r\n  </ng-container>\r\n\r\n  <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n  <tr\r\n    mat-row\r\n    (click)=\"clickedRows.add(row)\"\r\n    [class.demo-row-is-clicked]=\"clickedRows.has(row)\"\r\n    *matRowDef=\"let row; columns: displayedColumns\"\r\n  ></tr>\r\n</table>\r\n","import { CategoriesService } from './../../_services/categories.service';\r\nimport { Categories } from './../../_models/categories';\r\nimport { TestsService } from './../../_services/tests.service';\r\nimport { Test } from '../../_models/test';\r\nimport { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { MatTable } from '@angular/material/table';\r\n\r\n@Component({\r\n  templateUrl: 'test-edit.component.html',\r\n  styleUrls: ['./../style-admin.scss'],\r\n  providers: [TestsService, CategoriesService],\r\n})\r\nexport class TestEditComponent implements OnInit {\r\n  displayedColumns: string[] = ['position', 'category', 'title', 'description'];\r\n  test: Test = new Test();\r\n  tests: Test[];\r\n  categories: Categories[];\r\n  clickedRows = new Set<Test>();\r\n  newRows = new Set<Test>();\r\n  isEdit = false;\r\n  @ViewChild(MatTable) table: MatTable<Test>;\r\n\r\n  constructor(\r\n    private testService: TestsService,\r\n    private categoriesService: CategoriesService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.loadTest();\r\n  }\r\n\r\n  clear() {\r\n    this.clickedRows.clear();\r\n    this.newRows.clear();\r\n    this.isEdit = false;\r\n  }\r\n  selectCar(event: Event) {\r\n    this.categories[0].name = (event.target as HTMLSelectElement).value;\r\n  }\r\n  loadCategories() {\r\n    this.categoriesService\r\n      .getAllCategories()\r\n      .subscribe((data: Categories[]) => (this.categories = data));\r\n  }\r\n\r\n  loadTest() {\r\n    this.testService\r\n      .getAllTests()\r\n      .subscribe((data: Test[]) => (this.tests = data));\r\n    this.clear();\r\n  }\r\n\r\n  clickAdd() {\r\n    let newItem: Test = { id: null, title: null, description: null };\r\n    this.tests.unshift(newItem);\r\n    this.newRows.add(newItem);\r\n    this.table.renderRows();\r\n  }\r\n\r\n  clickDelete(set: Set<Test>) {\r\n    for (let value of set)\r\n      this.testService\r\n        .deleteTest(value.id)\r\n        .subscribe((data) => this.loadTest());\r\n    this.clear();\r\n    this.loadTest();\r\n  }\r\n\r\n  clickSave(set: Set<Test>) {\r\n    for (let value of set)\r\n      this.testService.updateTest(value).subscribe((data) => this.loadTest());\r\n    this.clear();\r\n    this.loadTest();\r\n  }\r\n\r\n  onRowSave(id: number) {\r\n    this.newRows.forEach((m) => {\r\n      if (id == m.id) {\r\n        this.test.title = m.title;\r\n        this.test.description = m.description;\r\n        this.testService\r\n          .createTest(this.test)\r\n          .subscribe((data) => this.loadTest());\r\n        this.test = new Test();\r\n      }\r\n    });\r\n    this.clear();\r\n  }\r\n\r\n  clickEdit(set: Set<Test>) {\r\n    let forEdit = new Array<Test>();\r\n    for (let value of set) forEdit.push(value);\r\n    this.tests = forEdit;\r\n    this.loadCategories();\r\n    set.clear();\r\n    this.clear();\r\n    this.isEdit = true;\r\n  }\r\n}\r\n","<div class=\"header\">Tests</div>\r\n<div class=\"action-buttons\" *ngIf=\"!isEdit; else save\">\r\n  <button mat-raised-button color=\"primary\" (click)=\"clickAdd()\">Add</button>\r\n  <button\r\n    mat-flat-button\r\n    color=\"accent\"\r\n    [disabled]=\"!clickedRows.size\"\r\n    (click)=\"clickEdit(clickedRows)\"\r\n  >\r\n    Edit\r\n  </button>\r\n  <button\r\n    mat-flat-button\r\n    color=\"warn\"\r\n    [disabled]=\"!clickedRows.size\"\r\n    (click)=\"clickDelete(clickedRows)\"\r\n  >\r\n    Delete\r\n  </button>\r\n  <span>*To change items, click on rows to select </span>\r\n</div>\r\n<ng-template #save>\r\n  <div class=\"action-buttons\">\r\n    <button\r\n      mat-flat-button\r\n      color=\"accent\"\r\n      [disabled]=\"!clickedRows.size\"\r\n      (click)=\"clickSave(clickedRows)\"\r\n    >\r\n      Save\r\n    </button>\r\n  </div>\r\n</ng-template>\r\n\r\n<table mat-table [dataSource]=\"tests\" class=\"mat-elevation-z8 demo-table\">\r\n  <!-- Position Column -->\r\n  <ng-container matColumnDef=\"position\">\r\n    <th mat-header-cell *matHeaderCellDef>No.</th>\r\n    <td mat-cell *matCellDef=\"let element\">\r\n      {{ element.id }}\r\n    </td>\r\n  </ng-container>\r\n\r\n  <!-- Category Column -->\r\n  <ng-container matColumnDef=\"category\">\r\n    <th mat-header-cell *matHeaderCellDef>Categories</th>\r\n    <td mat-cell *matCellDef=\"let element\">\r\n      <mat-form-field appearance=\"fill\" *ngIf=\"isEdit\">\r\n        <select matNativeControl [(ngModel)]=\"selectedCar\" name=\"car\">\r\n          <option *ngFor=\"let cat of categories\" [value]=\"cat.id\">\r\n            {{ cat.name }}\r\n          </option>\r\n        </select>\r\n      </mat-form-field>\r\n\r\n      {{ element.categoryId }}\r\n    </td>\r\n  </ng-container>\r\n\r\n  <!-- title Column -->\r\n  <ng-container matColumnDef=\"title\">\r\n    <th mat-header-cell *matHeaderCellDef>Title</th>\r\n    <td mat-cell *matCellDef=\"let element\">\r\n      <mat-form-field\r\n        class=\"example-form-field\"\r\n        appearance=\"fill\"\r\n        *ngIf=\"isEdit\"\r\n      >\r\n        <input matInput type=\"text\" [(ngModel)]=\"element.title\" />\r\n      </mat-form-field>\r\n      <div class=\"add\" *ngIf=\"!isEdit && newRows.has(element)\">\r\n        <mat-form-field class=\"example-form-field\" appearance=\"fill\">\r\n          <input matInput type=\"text\" [(ngModel)]=\"element.title\" />\r\n        </mat-form-field>\r\n      </div>\r\n\r\n      <p *ngIf=\"!isEdit && !newRows.has(element)\">\r\n        {{ element.title }}\r\n      </p>\r\n    </td>\r\n  </ng-container>\r\n\r\n  <!-- Description Column -->\r\n  <ng-container matColumnDef=\"description\">\r\n    <th mat-header-cell *matHeaderCellDef>Description</th>\r\n    <td mat-cell *matCellDef=\"let element\">\r\n      <mat-form-field\r\n        class=\"example-form-field\"\r\n        appearance=\"fill\"\r\n        *ngIf=\"isEdit\"\r\n      >\r\n        <input matInput type=\"text\" [(ngModel)]=\"element.description\" />\r\n      </mat-form-field>\r\n      <div class=\"add\" *ngIf=\"!isEdit && newRows.has(element)\">\r\n        <mat-form-field class=\"example-form-field\" appearance=\"fill\">\r\n          <input matInput type=\"text\" [(ngModel)]=\"element.description\" />\r\n        </mat-form-field>\r\n        <button\r\n          mat-flat-button\r\n          color=\"accent\"\r\n          [disabled]=\"!clickedRows.size\"\r\n          (click)=\"onRowSave(element.id)\"\r\n        >\r\n          Save\r\n        </button>\r\n      </div>\r\n\r\n      <p *ngIf=\"!isEdit && !newRows.has(element)\">\r\n        {{ element.description }}\r\n      </p>\r\n    </td>\r\n  </ng-container>\r\n\r\n  <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n  <tr\r\n    mat-row\r\n    (click)=\"clickedRows.add(row)\"\r\n    [class.demo-row-is-clicked]=\"clickedRows.has(row)\"\r\n    *matRowDef=\"let row; columns: displayedColumns\"\r\n  ></tr>\r\n</table>\r\n","import { TestEditComponent } from './admin/tests/test-edit.component';\r\nimport { CategoriesEditComponent } from './admin/categories/categories-edit.component';\r\nimport { ResultComponent } from './result/result.component';\r\nimport { PlayTestComponent } from './play-test/play-test.component';\r\nimport { CategoriesComponent } from './categories/categories.component';\r\nimport { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { HomeComponent } from './home';\r\nimport { LoginComponent } from './login';\r\nimport { TestListComponent } from './test-list/test-list.component';\r\nimport { AuthGuard } from './_helpers';\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: HomeComponent, canActivate: [AuthGuard] },\r\n  { path: 'login', component: LoginComponent },\r\n  { path: 'test-list/:id', component: TestListComponent },\r\n  { path: 'admin/tests', component: TestEditComponent },\r\n  { path: 'categories', component: CategoriesComponent },\r\n  {\r\n    path: 'admin/categories',\r\n    component: CategoriesEditComponent,\r\n  },\r\n  { path: 'play', component: PlayTestComponent },\r\n  { path: 'result', component: ResultComponent },\r\n\r\n  { path: '**', redirectTo: '' },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class AppRoutingModule {}\r\n","import { Component } from '@angular/core';\r\n\r\nimport { AuthenticationService } from './_services';\r\nimport { User } from './_models';\r\nimport { ViewChild } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app',\r\n  templateUrl: 'app.component.html',\r\n  styleUrls: ['./app.component.scss'],\r\n})\r\nexport class AppComponent {\r\n  user: User;\r\n\r\n  constructor(private authenticationService: AuthenticationService) {\r\n    this.authenticationService.user.subscribe((x) => (this.user = x));\r\n  }\r\n\r\n  logout() {\r\n    this.authenticationService.logout();\r\n  }\r\n}\r\n","<mat-toolbar>\r\n  <mat-toolbar-row class=\"toolbar\">\r\n    <span class=\"nav-item nav-link\" routerLink=\"/categories\">Home</span>\r\n    <span *ngIf=\"user\" class=\"nav-item nav-link\" (click)=\"logout()\"\r\n      >Logout</span\r\n    >\r\n    <span class=\"example-spacer\"></span>\r\n\r\n    <span class=\"nav-item nav-link\" routerLink=\"/categories\">{{\r\n      user?.username\r\n    }}</span>\r\n    <mat-icon\r\n      *ngIf=\"user?.id\"\r\n      class=\"example-icon\"\r\n      aria-hidden=\"false\"\r\n      aria-label=\"Example user verified icon\"\r\n      >verified_user</mat-icon\r\n    >\r\n  </mat-toolbar-row>\r\n</mat-toolbar>\r\n<!-- main app container -->\r\n<div class=\"container\">\r\n  <router-outlet role=\"admin\"></router-outlet>\r\n</div>\r\n","import { TestEditComponent } from './admin/tests/test-edit.component';\r\nimport { CategoriesEditComponent } from './admin/categories/categories-edit.component';\r\nimport { ResultComponent } from './result/result.component';\r\nimport { PlayTestComponent } from './play-test/play-test.component';\r\nimport { TestAcceptDialog } from './test-list/test-accept-dialog/test-accept-dialog';\r\nimport { CategoriesComponent } from './categories/categories.component';\r\nimport { NgModule, APP_INITIALIZER } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { AppRoutingModule } from './app-routing.module';\r\n\r\nimport { JwtInterceptor, ErrorInterceptor, appInitializer } from './_helpers';\r\nimport { AuthenticationService } from './_services';\r\nimport { HomeComponent } from './home';\r\nimport { LoginComponent } from './login';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { MatExpansionModule } from '@angular/material/expansion';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatListModule } from '@angular/material/list';\r\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\r\nimport { MatRadioModule } from '@angular/material/radio';\r\nimport { MatStepperModule } from '@angular/material/stepper';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\n\r\n@NgModule({\r\n  imports: [\r\n    BrowserModule,\r\n    ReactiveFormsModule,\r\n    HttpClientModule,\r\n    AppRoutingModule,\r\n    BrowserAnimationsModule,\r\n    MatButtonModule,\r\n    MatFormFieldModule,\r\n    MatCardModule,\r\n    MatIconModule,\r\n    MatCheckboxModule,\r\n    MatExpansionModule,\r\n    MatInputModule,\r\n    MatListModule,\r\n    MatProgressBarModule,\r\n    MatRadioModule,\r\n    MatStepperModule,\r\n    MatTableModule,\r\n    MatToolbarModule,\r\n    MatSnackBarModule,\r\n    MatDialogModule,\r\n    FormsModule,\r\n  ],\r\n  declarations: [\r\n    AppComponent,\r\n    HomeComponent,\r\n    LoginComponent,\r\n    CategoriesComponent,\r\n    CategoriesEditComponent,\r\n    TestAcceptDialog,\r\n    TestEditComponent,\r\n    PlayTestComponent,\r\n    ResultComponent,\r\n  ],\r\n  providers: [\r\n    {\r\n      provide: APP_INITIALIZER,\r\n      useFactory: appInitializer,\r\n      multi: true,\r\n      deps: [AuthenticationService],\r\n    },\r\n    { provide: HTTP_INTERCEPTORS, useClass: JwtInterceptor, multi: true },\r\n    { provide: HTTP_INTERCEPTORS, useClass: ErrorInterceptor, multi: true },\r\n  ],\r\n  bootstrap: [AppComponent],\r\n})\r\nexport class AppModule {}\r\n","import { AuthenticationService } from './../_services/authentication.service';\r\nimport { User } from './../_models/user';\r\nimport { CategoriesService } from './../_services/categories.service';\r\nimport { Categories } from './../_models/categories';\r\nimport { Component, Input, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-categories',\r\n  templateUrl: 'categories.component.html',\r\n  providers: [CategoriesService],\r\n})\r\nexport class CategoriesComponent implements OnInit {\r\n  categories: Categories[];\r\n  tableMode: boolean;\r\n  user: User;\r\n  admin: boolean = true;\r\n\r\n  constructor(\r\n    private authenticationService: AuthenticationService,\r\n    private categoriesService: CategoriesService\r\n  ) {\r\n    this.authenticationService.user.subscribe((x) => (this.user = x));\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.loadCategories();\r\n  }\r\n\r\n  loadCategories() {\r\n    this.categoriesService\r\n      .getAllCategories()\r\n      .subscribe((data: Categories[]) => (this.categories = data));\r\n  }\r\n}\r\n","<mat-card>\r\n  <mat-card-title>Categories </mat-card-title>\r\n  <mat-card-content>\r\n    <mat-nav-list role=\"list\" *ngFor=\"let cat of categories\">\r\n      <mat-list-item role=\"listitem\" [routerLink]=\"['test-list', cat.id]\"\r\n        >{{ cat.name }}\r\n        <div></div>\r\n      </mat-list-item>\r\n    </mat-nav-list>\r\n  </mat-card-content>\r\n  <mat-card-actions> </mat-card-actions>\r\n</mat-card>\r\n","import { Component } from '@angular/core';\r\nimport { first } from 'rxjs/operators';\r\n\r\nimport { User } from '@app/_models';\r\nimport { UserService } from '@app/_services';\r\n\r\n@Component({ templateUrl: 'home.component.html' })\r\nexport class HomeComponent {\r\n    loading = false;\r\n    users: User[];\r\n\r\n    constructor(private userService: UserService) { }\r\n\r\n    ngOnInit() {\r\n        this.loading = true;\r\n        this.userService.getAll().pipe(first()).subscribe(users => {\r\n            this.loading = false;\r\n            this.users = users;\r\n        });\r\n    }\r\n}","<div>\r\n  <mat-card> </mat-card>\r\n</div>\r\n","export * from './home.component';","export * from './login.component';","import { Component, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { first } from 'rxjs/operators';\r\n\r\nimport { AuthenticationService } from '@app/_services';\r\n\r\n@Component({ templateUrl: 'login.component.html' })\r\nexport class LoginComponent implements OnInit {\r\n  loginForm: FormGroup;\r\n  loading = false;\r\n  submitted = false;\r\n  returnUrl: string;\r\n  error = '';\r\n  hide = true;\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private authenticationService: AuthenticationService\r\n  ) {\r\n    if (this.authenticationService.userValue) {\r\n      this.router.navigate(['/']);\r\n    }\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.loginForm = this.formBuilder.group({\r\n      username: ['', Validators.required],\r\n      password: ['', Validators.required],\r\n    });\r\n\r\n    this.returnUrl = this.route.snapshot.queryParams['returnUrl'] || '/';\r\n  }\r\n\r\n  get f() {\r\n    return this.loginForm.controls;\r\n  }\r\n\r\n  onSubmit() {\r\n    this.submitted = true;\r\n\r\n    if (this.loginForm.invalid) {\r\n      return;\r\n    }\r\n\r\n    this.loading = true;\r\n    this.authenticationService\r\n      .login(this.f.username.value, this.f.password.value)\r\n      .pipe(first())\r\n      .subscribe({\r\n        next: () => {\r\n          this.router.navigate([this.returnUrl]);\r\n        },\r\n        error: (error) => {\r\n          this.error = error;\r\n          this.loading = false;\r\n        },\r\n      });\r\n  }\r\n}\r\n","<div class=\"col-md-6 offset-md-3 mt-5\">\r\n  <div class=\"alert alert-info\">\r\n    Username: test<br />\r\n    Password: test\r\n  </div>\r\n  <div class=\"card\">\r\n    <h4 class=\"card-header\">Angular 10 JWT Auth with Refresh Tokens</h4>\r\n    <div class=\"card-body\">\r\n      <form [formGroup]=\"loginForm\" (ngSubmit)=\"onSubmit()\">\r\n        <div class=\"form-group\">\r\n          <label for=\"username\">Username</label>\r\n          <input\r\n            type=\"text\"\r\n            formControlName=\"username\"\r\n            class=\"form-control\"\r\n            [ngClass]=\"{ 'is-invalid': submitted && f.username.errors }\"\r\n          />\r\n          <div *ngIf=\"submitted && f.username.errors\" class=\"invalid-feedback\">\r\n            <div *ngIf=\"f.username.errors.required\">Username is required</div>\r\n          </div>\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <label for=\"password\">Password</label>\r\n          <input\r\n            type=\"password\"\r\n            formControlName=\"password\"\r\n            class=\"form-control\"\r\n            [ngClass]=\"{ 'is-invalid': submitted && f.password.errors }\"\r\n          />\r\n          <div *ngIf=\"submitted && f.password.errors\" class=\"invalid-feedback\">\r\n            <div *ngIf=\"f.password.errors.required\">Password is required</div>\r\n          </div>\r\n        </div>\r\n        <button [disabled]=\"loading\" class=\"btn btn-primary\">\r\n          <span\r\n            *ngIf=\"loading\"\r\n            class=\"spinner-border spinner-border-sm mr-1\"\r\n          ></span>\r\n          Login\r\n        </button>\r\n        <div *ngIf=\"error\" class=\"alert alert-danger mt-3 mb-0\">\r\n          {{ error }}\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { FormGroup, FormBuilder } from '@angular/forms';\r\nimport { Answer } from './../_models/answer';\r\nimport { Question } from '@app/_models';\r\nimport { Test } from '../_models/test';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { takeWhile, tap, timeInterval } from 'rxjs/operators';\r\nimport { interval, observable, timer } from 'rxjs';\r\nobservable;\r\n\r\n@Component({\r\n  templateUrl: './play-test.component.html',\r\n  styleUrls: ['./play-test.component.scss'],\r\n})\r\nexport class PlayTestComponent implements OnInit {\r\n  test: Test;\r\n  question: Question;\r\n  userAnswer: Answer;\r\n  questionAnswers: Answer[] = [];\r\n  subscribeTimer = 0;\r\n  afterAnswerTimeout = 1500;\r\n  disabled = false;\r\n\r\n  questions: Question[] = [\r\n    {\r\n      id: 1,\r\n      question: 'При їзді по гравійним дорогам, керуючи мотоциклом, Ви повинні',\r\n    },\r\n    {\r\n      id: 2,\r\n      question: 'Водій тролейбуса зобовязаний мати при собі',\r\n    },\r\n    {\r\n      id: 3,\r\n      question:\r\n        'З якого віку надається право на керування транспортними засобами категорії В?',\r\n    },\r\n    {\r\n      id: 4,\r\n      question:\r\n        'Як слід вчинити водієві тролейбуса, якщо під час руху сухою дорогою з асфальтобетонним покриттям почав накрапати дощ?',\r\n    },\r\n  ];\r\n\r\n  answers: Answer[] = [\r\n    {\r\n      questionId: 1,\r\n      answer: 'Дивитися на дорогу прямо перед переднім колесом.',\r\n      correct: true,\r\n    },\r\n    {\r\n      questionId: 1,\r\n      answer: 'Дивитися на дорогу трохи далі, ніж зазвичай',\r\n      correct: false,\r\n    },\r\n    {\r\n      questionId: 1,\r\n      answer: 'Трохи зменшити швидкість.',\r\n      correct: true,\r\n    },\r\n    {\r\n      questionId: 2,\r\n      answer: 'Мати паспорт громадянина України.',\r\n      correct: false,\r\n    },\r\n    {\r\n      questionId: 2,\r\n      answer:\r\n        'Мати посвідчення водія на право керування транспортним засобом відповідної категорії.',\r\n      correct: true,\r\n    },\r\n    {\r\n      questionId: 2,\r\n      answer: 'Обидві відповіді правильні.',\r\n      correct: false,\r\n    },\r\n    {\r\n      questionId: 3,\r\n      answer: 'З 16 років',\r\n      correct: false,\r\n    },\r\n    {\r\n      questionId: 3,\r\n      answer: 'З 18 років.',\r\n      correct: true,\r\n    },\r\n    {\r\n      questionId: 3,\r\n      answer: 'З 19 років.',\r\n      correct: false,\r\n    },\r\n    {\r\n      questionId: 3,\r\n      answer: 'З 21 року.',\r\n      correct: false,\r\n    },\r\n    {\r\n      questionId: 4,\r\n      answer:\r\n        'Збільшити швидкість і спробувати проїхати якомога більшу відстань, поки не почався сильний дощ.',\r\n      correct: false,\r\n    },\r\n    {\r\n      questionId: 4,\r\n      answer: 'Зменшити швидкість і бути обережним.',\r\n      correct: true,\r\n    },\r\n    {\r\n      questionId: 4,\r\n      answer: 'Не змінюючи швидкості, продовжити рух.',\r\n      correct: false,\r\n    },\r\n  ];\r\n\r\n  constructor(fb: FormBuilder) {}\r\n\r\n  ngOnInit() {\r\n    this.getNewQuestion();\r\n  }\r\n\r\n  getNewQuestion() {\r\n    this.question = this.getQuestion();\r\n    this.questionAnswers = this.getAnswers(this.question);\r\n    this.disabled = false;\r\n  }\r\n\r\n  getQuestion() {\r\n    return this.questions[Math.floor(Math.random() * this.questions.length)];\r\n  }\r\n\r\n  getAnswers(question: Question): Answer[] {\r\n    return this.answers.filter((q) => q.questionId == question.id);\r\n  }\r\n\r\n  onClick() {\r\n    if (!this.disabled) {\r\n      this.disabled = true;\r\n      console.log(this.userAnswer);\r\n\r\n      let okJob = setTimeout(\r\n        () => this.getNewQuestion(),\r\n        this.afterAnswerTimeout\r\n      );\r\n    }\r\n  }\r\n}\r\n","<mat-card>\r\n  <mat-card-title>{{ question.question }}</mat-card-title>\r\n  <mat-card-actions>\r\n    <mat-radio-group\r\n      aria-labelledby=\"example-radio-group-label\"\r\n      class=\"example-radio-group\"\r\n    >\r\n      <mat-selection-list #answer [multiple]=\"false\">\r\n        <mat-list-option\r\n          *ngFor=\"let answer of questionAnswers; let i; as: index\"\r\n          [ngClass]=\"answer.correct ? 'correct' : 'incorrect'\"\r\n          (click)=\"onClick(answer)\"\r\n        >\r\n          <mat-list-item role=\"listitem\"\r\n            ><mat-radio-button [value]=\"i\">{{\r\n              answer.answer\r\n            }}</mat-radio-button></mat-list-item\r\n          >\r\n        </mat-list-option>\r\n      </mat-selection-list>\r\n    </mat-radio-group>\r\n  </mat-card-actions>\r\n</mat-card>\r\n","import { Component } from '@angular/core';\r\nimport { first } from 'rxjs/operators';\r\n\r\nimport { User } from '@app/_models';\r\nimport { UserService } from '@app/_services';\r\n\r\n@Component({ templateUrl: 'result.component.html' })\r\nexport class ResultComponent {\r\n  loading = false;\r\n  users: User[];\r\n\r\n  constructor(private userService: UserService) {}\r\n\r\n  ngOnInit() {\r\n    this.loading = true;\r\n    this.userService\r\n      .getAll()\r\n      .pipe(first())\r\n      .subscribe((users) => {\r\n        this.loading = false;\r\n        this.users = users;\r\n      });\r\n  }\r\n}\r\n","<div>\r\n  <mat-card> </mat-card>\r\n</div>\r\n","import { Test } from '@app/_models';\r\nimport { Component, Inject } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\n\r\n@Component({\r\n  selector: 'test-accept-dialog',\r\n  templateUrl: 'test-accept-dialog.html',\r\n  styles: [\r\n    `\r\n      .dialog-actions {\r\n        justify-content: space-between;\r\n      }\r\n    `,\r\n  ],\r\n})\r\nexport class TestAcceptDialog {\r\n  checked = false;\r\n  disabled = false;\r\n\r\n  constructor(\r\n    public dialogRef: MatDialogRef<TestAcceptDialog>,\r\n    @Inject(MAT_DIALOG_DATA) public data: Test\r\n  ) {}\r\n\r\n  onNoClick(): void {\r\n    this.dialogRef.close();\r\n  }\r\n}\r\n","<h1 mat-dialog-title>{{data.title}}</h1>\r\n<div mat-dialog-content>\r\n  <p>{{data.description}}</p>\r\n</div>\r\n<div mat-dialog-actions class=\"dialog-actions\">\r\n  <section>\r\n    <mat-checkbox [(ngModel)]=\"checked\">I agree to start</mat-checkbox>\r\n  </section>\r\n  <button\r\n    mat-flat-button\r\n    color=\"accent\"\r\n    [mat-dialog-close]=\"true\"\r\n    [disabled]=\"!checked\"\r\n    cdkFocusInitial\r\n  >\r\n    Proceed\r\n  </button>\r\n</div>\r\n","import { Router, ActivatedRoute } from '@angular/router';\r\nimport { TestsService } from './../_services/tests.service';\r\nimport { TestAcceptDialog } from '../test-list/test-accept-dialog/test-accept-dialog';\r\nimport { Test } from '../_models/test';\r\nimport { Component } from '@angular/core';\r\n\r\nimport { MatDialog } from '@angular/material/dialog';\r\n\r\n@Component({\r\n  selector: 'app-tests-list',\r\n  templateUrl: './test-list.component.html',\r\n  providers: [TestsService],\r\n})\r\nexport class TestListComponent {\r\n  id: number;\r\n  loading = false;\r\n  testList = 'test-list';\r\n  tests: Test[];\r\n\r\n  constructor(\r\n    public dialog: MatDialog,\r\n    private router: Router,\r\n    activeRoute: ActivatedRoute\r\n  ) {\r\n    this.id = Number.parseInt(activeRoute.snapshot.params['id']);\r\n  }\r\n\r\n  openDialog(test: Test) {\r\n    const dialogRef = this.dialog.open(TestAcceptDialog, {\r\n      maxWidth: '500px',\r\n      data: test,\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe((result: boolean) => {\r\n      console.log('The dialog was closed ', result);\r\n    });\r\n  }\r\n\r\n  ngOnInit() {}\r\n}\r\n","<mat-expansion-panel *ngFor=\"let test of tests\">\r\n  <mat-expansion-panel-header>\r\n    <mat-panel-title>{{ test.title }}</mat-panel-title>\r\n  </mat-expansion-panel-header>\r\n  <p>{{ test.description | slice: 0:100 }}...</p>\r\n  <button mat-raised-button color=\"primary\" (click)=\"openDialog(test)\">\r\n    Start\r\n  </button>\r\n</mat-expansion-panel>\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  apiUrl: 'http://localhost:4000'\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n    enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n    .catch(err => console.error(err));"],"sourceRoot":"webpack:///"}