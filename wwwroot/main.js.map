{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/_helpers/app.initializer.ts","./src/app/_helpers/auth.guard.ts","./src/app/_helpers/error.interceptor.ts","./src/app/_helpers/index.ts","./src/app/_helpers/jwt.interceptor.ts","./src/app/_models/answer.ts","./src/app/_models/categories.ts","./src/app/_models/index.ts","./src/app/_models/question.ts","./src/app/_models/test.ts","./src/app/_models/user-score.ts","./src/app/_models/user-test.ts","./src/app/_models/user.ts","./src/app/_services/answer.service.ts","./src/app/_services/authentication.service.ts","./src/app/_services/categories.service.ts","./src/app/_services/index.ts","./src/app/_services/question.service.ts","./src/app/_services/result.service.ts","./src/app/_services/tests.service.ts","./src/app/_services/user.service.ts","./src/app/admin/admin.component.ts","./src/app/admin/admin.component.html","./src/app/admin/answers/answers-edit.component.ts","./src/app/admin/answers/answers-edit.component.html","./src/app/admin/categories/categories-edit.component.ts","./src/app/admin/categories/categories-edit.component.html","./src/app/admin/questions/questions.component.ts","./src/app/admin/questions/questions-edit.component.html","./src/app/admin/tests/test-edit.component.ts","./src/app/admin/tests/test-edit.component.html","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/categories/categories.component.ts","./src/app/categories/categories.component.html","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/app/login/index.ts","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/app/play-test/play-test.component.ts","./src/app/play-test/play-test.component.html","./src/app/reg/reg.component.ts","./src/app/reg/reg.component.html","./src/app/result/result.component.ts","./src/app/result/result.component.html","./src/app/test-list/test-accept-dialog/test-accept-dialog.ts","./src/app/test-list/test-accept-dialog/test-accept-dialog.html","./src/app/test-list/test-list.component.ts","./src/app/test-list/test-list.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { AuthenticationService } from '@app/_services';\r\n\r\nexport function appInitializer(authenticationService: AuthenticationService) {\r\n    return () => new Promise(resolve => {\r\n        // attempt to refresh token on app start up to auto authenticate\r\n        authenticationService.refreshToken()\r\n            .subscribe()\r\n            .add(resolve);\r\n    });\r\n}","import { Injectable } from '@angular/core';\r\nimport {\r\n  Router,\r\n  CanActivate,\r\n  ActivatedRouteSnapshot,\r\n  RouterStateSnapshot,\r\n} from '@angular/router';\r\n\r\nimport { AuthenticationService } from '@app/_services';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class AuthGuard implements CanActivate {\r\n  constructor(\r\n    private router: Router,\r\n    private authenticationService: AuthenticationService\r\n  ) {}\r\n\r\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\r\n    const user = this.authenticationService.userValue;\r\n    if (user) {\r\n      // logged in so return true\r\n      return true;\r\n    } else {\r\n      // not logged in so redirect to login page with the return url\r\n      this.router.navigate(['/login'], {\r\n        queryParams: { returnUrl: state.url },\r\n      });\r\n      return false;\r\n    }\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\n\r\nimport { AuthenticationService } from '@app/_services';\r\n\r\n@Injectable()\r\nexport class ErrorInterceptor implements HttpInterceptor {\r\n    constructor(private authenticationService: AuthenticationService) { }\r\n\r\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        return next.handle(request).pipe(catchError(err => {\r\n            if ([401, 403].includes(err.status) && this.authenticationService.userValue) {\r\n                // auto logout if 401 or 403 response returned from api\r\n                this.authenticationService.logout();\r\n            }\r\n\r\n            const error = (err && err.error && err.error.message) || err.statusText;\r\n            console.error(err);\r\n            return throwError(error);\r\n        }))\r\n    }\r\n}","export * from './app.initializer';\r\nexport * from './auth.guard';\r\nexport * from './error.interceptor';\r\nexport * from './jwt.interceptor';","import { Injectable } from '@angular/core';\r\nimport {\r\n  HttpRequest,\r\n  HttpHandler,\r\n  HttpEvent,\r\n  HttpInterceptor,\r\n} from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { environment } from '@environments/environment';\r\nimport { AuthenticationService } from '@app/_services';\r\n\r\n@Injectable()\r\nexport class JwtInterceptor implements HttpInterceptor {\r\n  constructor(private authenticationService: AuthenticationService) {}\r\n\r\n  intercept(\r\n    request: HttpRequest<any>,\r\n    next: HttpHandler\r\n  ): Observable<HttpEvent<any>> {\r\n    // add auth header with jwt if user is logged in and request is to the api url\r\n    const user = this.authenticationService.userValue;\r\n    const isLoggedIn = user && user.jwtToken;\r\n    const isApiUrl = request.url.startsWith(environment.apiUrl);\r\n    if (isLoggedIn && isApiUrl) {\r\n      request = request.clone({\r\n        setHeaders: { Authorization: `Bearer ${user.jwtToken}` },\r\n      });\r\n    }\r\n\r\n    return next.handle(request);\r\n  }\r\n}\r\n","export class Answer {\r\n  id?: number;\r\n  questionId?: number;\r\n  answer: string;\r\n  correct: boolean;\r\n}\r\n","export class Categories {\r\n  id: number;\r\n  name: string;\r\n}\r\n","export * from './test';\r\nexport * from './user';\r\nexport * from './categories';\r\nexport * from './user-score';\r\nexport * from './user-test';\r\nexport * from './question';\r\nexport * from './answer';\r\n","export class Question {\r\n  id?: number;\r\n  testId?: number;\r\n  question: string;\r\n}\r\n","import { NumberValueAccessor } from '@angular/forms';\r\n\r\nexport class Test {\r\n  id?: number;\r\n  categoryId?: number;\r\n  title: string;\r\n  description: string;\r\n}\r\n","export class UserScore {\r\n  id?: number;\r\n  userId: number;\r\n  testId: number;\r\n  time: number;\r\n  correct: number;\r\n  wrong: number;\r\n}\r\n","export class UserTest {\r\n  id: number;\r\n  userId: number;\r\n  testId: number;\r\n  score: string;\r\n  time: string;\r\n}\r\n","export class User {\r\n  id: number;\r\n  username: string;\r\n  password: string;\r\n  firstName: string;\r\n  lastName: string;\r\n  admin: boolean;\r\n  jwtToken?: string;\r\n}\r\n","import { Answer } from '../_models/answer';\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { environment } from '@environments/environment';\r\n\r\n@Injectable()\r\nexport class AnswerService {\r\n  private url = environment.apiUrl + '/api/answer';\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  getAllAnswers() {\r\n    return this.http.get(this.url);\r\n  }\r\n\r\n  getAnswer(id: number) {\r\n    return this.http.get(this.url + '/' + id);\r\n  }\r\n\r\n  createAnswer(Answer: Answer) {\r\n    return this.http.post(this.url, Answer);\r\n  }\r\n\r\n  updateAnswer(Answer: Answer) {\r\n    return this.http.put(this.url, Answer);\r\n  }\r\n  deleteAnswer(id: number) {\r\n    return this.http.delete(this.url + '/' + id);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\r\nimport { environment } from '@environments/environment';\r\nimport { User } from '@app/_models';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class AuthenticationService {\r\n  private userSubject: BehaviorSubject<User>;\r\n  public user: Observable<User>;\r\n\r\n  constructor(private router: Router, private http: HttpClient) {\r\n    this.userSubject = new BehaviorSubject<User>(null);\r\n    this.user = this.userSubject.asObservable();\r\n  }\r\n\r\n  public get userValue(): User {\r\n    return this.userSubject.value;\r\n  }\r\n\r\n  login(username: string, password: string) {\r\n    return this.http\r\n      .post<any>(\r\n        `${environment.apiUrl}/users/authenticate`,\r\n        { username, password },\r\n        { withCredentials: true }\r\n      )\r\n      .pipe(\r\n        map((user) => {\r\n          this.userSubject.next(user);\r\n          this.startRefreshTokenTimer();\r\n          return user;\r\n        })\r\n      );\r\n  }\r\n\r\n  reg(username: string, password: string) {\r\n    return this.http\r\n      .post<any>(\r\n        `${environment.apiUrl}/users/create`,\r\n        { username, password },\r\n        { withCredentials: true }\r\n      )\r\n      .pipe(\r\n        map((user) => {\r\n          this.userSubject.next(user);\r\n          this.startRefreshTokenTimer();\r\n          return user;\r\n        })\r\n      );\r\n  }\r\n\r\n  logout() {\r\n    this.http\r\n      .post<any>(\r\n        `${environment.apiUrl}/users/revoke-token`,\r\n        {},\r\n        { withCredentials: true }\r\n      )\r\n      .subscribe();\r\n    this.stopRefreshTokenTimer();\r\n    this.userSubject.next(null);\r\n    this.router.navigate(['/login']);\r\n  }\r\n\r\n  refreshToken() {\r\n    return this.http\r\n      .post<any>(\r\n        `${environment.apiUrl}/users/refresh-token`,\r\n        {},\r\n        { withCredentials: true }\r\n      )\r\n      .pipe(\r\n        map((user) => {\r\n          this.userSubject.next(user);\r\n          this.startRefreshTokenTimer();\r\n          return user;\r\n        })\r\n      );\r\n  }\r\n\r\n  // helper methods\r\n\r\n  private refreshTokenTimeout;\r\n\r\n  private startRefreshTokenTimer() {\r\n    // parse json object from base64 encoded jwt token\r\n    const jwtToken = JSON.parse(atob(this.userValue.jwtToken.split('.')[1]));\r\n\r\n    // set a timeout to refresh the token a minute before it expires\r\n    const expires = new Date(jwtToken.exp * 1000);\r\n    const timeout = expires.getTime() - Date.now() - 60 * 1000;\r\n    this.refreshTokenTimeout = setTimeout(\r\n      () => this.refreshToken().subscribe(),\r\n      timeout\r\n    );\r\n  }\r\n\r\n  private stopRefreshTokenTimer() {\r\n    clearTimeout(this.refreshTokenTimeout);\r\n  }\r\n}\r\n","import { Categories } from './../_models/categories';\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { environment } from '@environments/environment';\r\n\r\n@Injectable()\r\nexport class CategoriesService {\r\n  private url = environment.apiUrl + '/api/categories';\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  getAllCategories() {\r\n    return this.http.get(this.url);\r\n  }\r\n\r\n  getCategories(id: number) {\r\n    return this.http.get(this.url + '/' + id);\r\n  }\r\n\r\n  createCategories(categories: Categories) {\r\n    return this.http.post(this.url, categories);\r\n  }\r\n  updateCategories(categories: Categories) {\r\n    return this.http.put(this.url, categories);\r\n  }\r\n  deleteCategories(id: number) {\r\n    return this.http.delete(this.url + '/' + id);\r\n  }\r\n}\r\n","export * from './authentication.service';\r\nexport * from './user.service';\r\nexport * from './categories.service';\r\n\r\nexport * from './tests.service';\r\nexport * from './question.service';\r\nexport * from './answer.service';\r\nexport * from './result.service';\r\n","import { Question } from '../_models/question';\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { environment } from '@environments/environment';\r\n\r\n@Injectable()\r\nexport class QuestionService {\r\n  private url = environment.apiUrl + '/api/question';\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  getAllQuestions() {\r\n    return this.http.get(this.url);\r\n  }\r\n\r\n  getQuestion(id: number) {\r\n    return this.http.get(this.url + '/' + id);\r\n  }\r\n\r\n  createQuestion(question: Question) {\r\n    return this.http.post(this.url, question);\r\n  }\r\n\r\n  updateQuestion(question: Question) {\r\n    return this.http.put(this.url, question);\r\n  }\r\n  deleteQuestion(id: number) {\r\n    return this.http.delete(this.url + '/' + id);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\nimport { environment } from '@environments/environment';\r\nimport { User, Test, Question, UserScore } from '@app/_models';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class ResultService {\r\n  private url = environment.apiUrl + '/api/score';\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  getAllScores() {\r\n    return this.http.get(this.url);\r\n  }\r\n\r\n  getScore(id: number) {\r\n    return this.http.get(this.url + '/' + id);\r\n  }\r\n\r\n  createScore(score: UserScore) {\r\n    return this.http.post(this.url, score);\r\n  }\r\n\r\n  updateScore(score: UserScore) {\r\n    return this.http.put(this.url, score);\r\n  }\r\n  deleteScore(id: number) {\r\n    return this.http.delete(this.url + '/' + id);\r\n  }\r\n}\r\n","import { Test } from '../_models/test';\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { environment } from '@environments/environment';\r\n\r\n@Injectable()\r\nexport class TestsService {\r\n  private url = environment.apiUrl + '/api/tests';\r\n  private categoryUrl = environment.apiUrl + '/api/tests';\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  getAllTests() {\r\n    return this.http.get(this.url);\r\n  }\r\n\r\n  getTest(id: number) {\r\n    return this.http.get(this.url + '/' + id);\r\n  }\r\n\r\n  getTestsByCategoryId(id: number) {\r\n    return this.http.get(this.url + '/categories/' + id);\r\n  }\r\n\r\n  getCategoryById(id: number) {\r\n    return this.http.get(this.categoryUrl + '/' + id);\r\n  }\r\n\r\n  createTest(test: Test) {\r\n    return this.http.post(this.url, test);\r\n  }\r\n\r\n  updateTest(test: Test) {\r\n    return this.http.put(this.url, test);\r\n  }\r\n  deleteTest(id: number) {\r\n    return this.http.delete(this.url + '/' + id);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\nimport { environment } from '@environments/environment';\r\nimport { User, Test, Question } from '@app/_models';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class UserService {\r\n  constructor(private http: HttpClient) {}\r\n\r\n  getAll() {\r\n    return this.http.get<User[]>(`${environment.apiUrl}/users`);\r\n  }\r\n}\r\n","import { Router } from '@angular/router';\r\nimport { AuthenticationService } from './../_services/authentication.service';\r\nimport { Question, User } from '@app/_models';\r\nimport { Test } from './../_models/test';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { FormControl } from '@angular/forms';\r\n\r\n@Component({\r\n  templateUrl: 'admin.component.html',\r\n  styleUrls: ['./style-admin.scss'],\r\n})\r\nexport class AdminComponent {\r\n  tabs = [];\r\n  type = [];\r\n  ids = [];\r\n  user: User;\r\n  selected = new FormControl(0);\r\n  constructor(\r\n    private authenticationService: AuthenticationService,\r\n    private router: Router\r\n  ) {\r\n    this.authenticationService.user.subscribe((x) => {\r\n      this.user = x;\r\n      if (!this.user.admin) this.router.navigate(['/categories']);\r\n    });\r\n  }\r\n\r\n  removeTab(index: number) {\r\n    this.tabs.splice(index, 1);\r\n  }\r\n\r\n  fromT(test: Test) {\r\n    this.tabs.push('Question ID: ' + test.id);\r\n    this.type.push('Questions');\r\n    this.ids.push(test.id);\r\n    this.selected.setValue(this.tabs.length + 1);\r\n  }\r\n\r\n  fromQ(question: Question) {\r\n    console.log(question);\r\n\r\n    this.tabs.push('Answer ID: ' + question.id);\r\n    this.type.push('Answers');\r\n    this.ids.push(question.id);\r\n    this.selected.setValue(this.tabs.length + 1);\r\n  }\r\n}\r\n","<mat-tab-group\r\n  [selectedIndex]=\"selected.value\"\r\n  (selectedIndexChange)=\"selected.setValue($event)\"\r\n>\r\n  <div class=\"tab__container\">\r\n    <mat-tab label=\"Categories\">\r\n      <categories-admin></categories-admin>\r\n    </mat-tab>\r\n    <mat-tab label=\"Tests\">\r\n      <tests-admin (question)=\"fromT($event)\"></tests-admin>\r\n    </mat-tab>\r\n\r\n    <mat-tab *ngFor=\"let tab of tabs; let index = index\" [label]=\"tab\">\r\n      <div class=\"header\">\r\n        {{ type[index] }}\r\n        <button\r\n          mat-raised-button\r\n          color=\"warn\"\r\n          class=\"example-delete-tab-button\"\r\n          (click)=\"removeTab(index)\"\r\n        >\r\n          Delete Tab\r\n        </button>\r\n      </div>\r\n      <ng-template [ngIf]=\"type[index] == 'Questions'\">\r\n        <questions-admin\r\n          (answer)=\"fromQ($event)\"\r\n          [id]=\"ids[index]\"\r\n        ></questions-admin>\r\n      </ng-template>\r\n      <ng-template [ngIf]=\"type[index] == 'Answers'\">\r\n        <answers-admin [id]=\"ids[index]\"></answers-admin>\r\n      </ng-template>\r\n    </mat-tab>\r\n  </div>\r\n</mat-tab-group>\r\n","import { AnswerService } from '../../_services/answer.service';\r\nimport { QuestionService } from '../../_services/question.service';\r\nimport { Test, Answer, Question } from '@app/_models';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Component, Input, OnInit, ViewChild } from '@angular/core';\r\nimport { MatTable } from '@angular/material/table';\r\nimport { core } from '@angular/compiler';\r\n\r\n@Component({\r\n  selector: 'answers-admin',\r\n\r\n  templateUrl: 'answers-edit.component.html',\r\n  styleUrls: ['./../style-admin.scss'],\r\n  providers: [QuestionService, AnswerService],\r\n})\r\nexport class AnswersEditComponent implements OnInit {\r\n  displayedColumns: string[] = ['answer', 'correct'];\r\n  question: Question;\r\n  answer: Answer = new Answer();\r\n  answers: Answer[];\r\n  clickedRows = new Set<Answer>();\r\n  newRows = new Set<Answer>();\r\n  isEdit = false;\r\n  @Input() id: number;\r\n  @ViewChild(MatTable) table: MatTable<Test>;\r\n\r\n  constructor(\r\n    private answerService: AnswerService,\r\n    private questionService: QuestionService,\r\n    activeRoute: ActivatedRoute\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.loadQuestion();\r\n    this.loadAnswer();\r\n  }\r\n\r\n  clear() {\r\n    this.clickedRows.clear();\r\n    this.newRows.clear();\r\n    this.isEdit = false;\r\n  }\r\n\r\n  loadAnswer() {\r\n    this.answerService\r\n      .getAllAnswers()\r\n      .subscribe(\r\n        (data: Answer[]) =>\r\n          (this.answers = data.filter((x) => x.questionId == this.id))\r\n      );\r\n    this.clear();\r\n  }\r\n\r\n  loadQuestion() {\r\n    this.questionService\r\n      .getAllQuestions()\r\n      .subscribe(\r\n        (data: Question[]) =>\r\n          (this.question = data.find((x) => x.id == this.id))\r\n      );\r\n    this.clear();\r\n  }\r\n\r\n  clickAdd() {\r\n    let newItem: Answer = {\r\n      id: null,\r\n      questionId: this.id,\r\n      answer: null,\r\n      correct: false,\r\n    };\r\n    this.answers.unshift(newItem);\r\n    this.newRows.add(newItem);\r\n    this.table.renderRows();\r\n  }\r\n\r\n  onRowSave(id: number) {\r\n    this.newRows.forEach((m) => {\r\n      if (id == m.id) {\r\n        this.answer.answer = m.answer;\r\n        this.answer.correct = m.correct;\r\n        this.answer.questionId = this.id;\r\n        console.log(this.answer);\r\n\r\n        this.answerService\r\n          .createAnswer(this.answer)\r\n          .subscribe((data) => this.loadAnswer());\r\n        this.answer = new Answer();\r\n      }\r\n    });\r\n    this.clear();\r\n  }\r\n\r\n  clickDelete(set: Set<Answer>) {\r\n    for (let value of set)\r\n      this.answerService\r\n        .deleteAnswer(value.id)\r\n        .subscribe((data) => this.loadAnswer());\r\n    this.clear();\r\n    this.loadAnswer();\r\n  }\r\n\r\n  clickSave(set: Set<Answer>) {\r\n    for (let value of set)\r\n      this.answerService\r\n        .updateAnswer(value)\r\n        .subscribe((data) => this.loadAnswer());\r\n    this.clear();\r\n    this.loadAnswer();\r\n  }\r\n\r\n  clickEdit(set: Set<Answer>) {\r\n    let forEdit = new Array<Answer>();\r\n    for (let value of set) forEdit.push(value);\r\n    this.answers = forEdit;\r\n    set.clear();\r\n    this.clear();\r\n    this.isEdit = true;\r\n  }\r\n}\r\n","<mat-card>\r\n  <mat-card-header>\r\n    <mat-card-title>{{ question.question }}</mat-card-title>\r\n  </mat-card-header>\r\n</mat-card>\r\n<br />\r\n<div class=\"action-buttons\" *ngIf=\"!isEdit; else save\">\r\n  <button mat-raised-button color=\"primary\" (click)=\"clickAdd()\">Add</button>\r\n  <button\r\n    mat-flat-button\r\n    color=\"accent\"\r\n    [disabled]=\"!clickedRows.size\"\r\n    (click)=\"clickEdit(clickedRows)\"\r\n  >\r\n    Edit\r\n  </button>\r\n  <button\r\n    mat-flat-button\r\n    color=\"warn\"\r\n    [disabled]=\"!clickedRows.size\"\r\n    (click)=\"clickDelete(clickedRows)\"\r\n  >\r\n    Delete\r\n  </button>\r\n  <span>*To change items, click on rows to select </span>\r\n</div>\r\n<ng-template #save>\r\n  <div class=\"action-buttons\">\r\n    <button\r\n      mat-flat-button\r\n      color=\"accent\"\r\n      [disabled]=\"!clickedRows.size\"\r\n      (click)=\"clickSave(clickedRows)\"\r\n    >\r\n      Save\r\n    </button>\r\n  </div>\r\n</ng-template>\r\n\r\n<table mat-table [dataSource]=\"answers\" class=\"mat-elevation-z8 demo-table\">\r\n  <!-- title Column -->\r\n  <ng-container matColumnDef=\"answer\">\r\n    <th mat-header-cell *matHeaderCellDef>Question</th>\r\n    <td mat-cell *matCellDef=\"let element\">\r\n      <mat-form-field\r\n        class=\"example-form-field\"\r\n        appearance=\"fill\"\r\n        *ngIf=\"isEdit\"\r\n      >\r\n        <input matInput type=\"text\" [(ngModel)]=\"element.answer\" />\r\n      </mat-form-field>\r\n      <div class=\"add\" *ngIf=\"!isEdit && newRows.has(element)\">\r\n        <mat-form-field class=\"example-form-field\" appearance=\"fill\">\r\n          <input matInput type=\"text\" [(ngModel)]=\"element.answer\" />\r\n        </mat-form-field>\r\n        <button\r\n          mat-flat-button\r\n          color=\"accent\"\r\n          [disabled]=\"!clickedRows.size\"\r\n          (click)=\"onRowSave(element.id)\"\r\n        >\r\n          Save\r\n        </button>\r\n      </div>\r\n\r\n      <p *ngIf=\"!isEdit && !newRows.has(element)\">\r\n        {{ element.answer }}\r\n      </p>\r\n    </td>\r\n  </ng-container>\r\n\r\n  <!-- Correct Column -->\r\n  <ng-container matColumnDef=\"correct\">\r\n    <th mat-header-cell *matHeaderCellDef>Correct</th>\r\n    <td mat-cell *matCellDef=\"let element\">\r\n      <section class=\"example-section\">\r\n        <mat-checkbox\r\n          *ngIf=\"isEdit || newRows.has(element)\"\r\n          class=\"example-margin\"\r\n          [(ngModel)]=\"element.correct\"\r\n          >Checked</mat-checkbox\r\n        >\r\n      </section>\r\n      {{ element.correct }}\r\n    </td>\r\n  </ng-container>\r\n\r\n  <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n  <tr\r\n    mat-row\r\n    (click)=\"clickedRows.add(row)\"\r\n    [class.demo-row-is-clicked]=\"clickedRows.has(row)\"\r\n    *matRowDef=\"let row; columns: displayedColumns\"\r\n  ></tr>\r\n</table>\r\n","import { AuthenticationService } from './../../_services/authentication.service';\r\nimport { User } from './../../_models/user';\r\nimport { Categories } from './../../_models/categories';\r\nimport { CategoriesService } from './../../_services/categories.service';\r\nimport { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { MatTable } from '@angular/material/table';\r\n\r\n@Component({\r\n  selector: 'categories-admin',\r\n\r\n  templateUrl: 'categories-edit.component.html',\r\n  styleUrls: ['./../style-admin.scss'],\r\n  providers: [CategoriesService],\r\n})\r\nexport class CategoriesEditComponent implements OnInit {\r\n  displayedColumns: string[] = ['position', 'name'];\r\n  category: Categories = new Categories();\r\n  categories: Categories[];\r\n  user: User;\r\n  clickedRows = new Set<Categories>();\r\n  newRows = new Set<Categories>();\r\n  isEdit = false;\r\n  @ViewChild(MatTable) table: MatTable<Categories>;\r\n\r\n  constructor(\r\n    private authenticationService: AuthenticationService,\r\n    private categoriesService: CategoriesService\r\n  ) {\r\n    this.authenticationService.user.subscribe((x) => (this.user = x));\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.loadCategories();\r\n    console.log(this.user);\r\n  }\r\n\r\n  clear() {\r\n    this.clickedRows.clear();\r\n    this.newRows.clear();\r\n    this.isEdit = false;\r\n  }\r\n\r\n  loadCategories() {\r\n    this.categoriesService\r\n      .getAllCategories()\r\n      .subscribe((data: Categories[]) => (this.categories = data));\r\n    this.clear();\r\n  }\r\n\r\n  clickAdd() {\r\n    let newItem: Categories = { id: null, name: null };\r\n    this.categories.unshift(newItem);\r\n    this.newRows.add(newItem);\r\n    this.table.renderRows();\r\n  }\r\n\r\n  clickDelete(set: Set<Categories>) {\r\n    for (let value of set)\r\n      this.categoriesService\r\n        .deleteCategories(value.id)\r\n        .subscribe((data) => this.loadCategories());\r\n    this.clear();\r\n    this.loadCategories();\r\n  }\r\n\r\n  clickSave(set: Set<Categories>) {\r\n    for (let value of set)\r\n      this.categoriesService\r\n        .updateCategories(value)\r\n        .subscribe((data) => this.loadCategories());\r\n    this.clear();\r\n    this.loadCategories();\r\n  }\r\n\r\n  onRowSave(id: number) {\r\n    let newItem: Categories;\r\n    this.newRows.forEach((m) => {\r\n      if (id == m.id) {\r\n        this.category.name = m.name;\r\n        this.categoriesService\r\n          .createCategories(this.category)\r\n          .subscribe((data) => this.loadCategories());\r\n        this.category = new Categories();\r\n      }\r\n    });\r\n    this.clear();\r\n  }\r\n\r\n  clickEdit(set: Set<Categories>) {\r\n    let forEdit = new Array<Categories>();\r\n    for (let value of set) forEdit.push(value);\r\n    this.categories = forEdit;\r\n    set.clear();\r\n    this.clear();\r\n    this.isEdit = true;\r\n  }\r\n}\r\n","<div class=\"header\">Categories</div>\r\n<div class=\"action-buttons\" *ngIf=\"!isEdit; else save\">\r\n  <button mat-raised-button color=\"primary\" (click)=\"clickAdd()\">Add</button>\r\n  <button\r\n    mat-flat-button\r\n    color=\"accent\"\r\n    [disabled]=\"!clickedRows.size\"\r\n    (click)=\"clickEdit(clickedRows)\"\r\n  >\r\n    Edit\r\n  </button>\r\n  <button\r\n    mat-flat-button\r\n    color=\"warn\"\r\n    [disabled]=\"!clickedRows.size\"\r\n    (click)=\"clickDelete(clickedRows)\"\r\n  >\r\n    Delete\r\n  </button>\r\n  <span>*To change items, click on rows to select </span>\r\n</div>\r\n<ng-template #save>\r\n  <div class=\"action-buttons\">\r\n    <button\r\n      mat-flat-button\r\n      color=\"accent\"\r\n      [disabled]=\"!clickedRows.size\"\r\n      (click)=\"clickSave(clickedRows)\"\r\n    >\r\n      Save\r\n    </button>\r\n  </div>\r\n</ng-template>\r\n\r\n<table mat-table [dataSource]=\"categories\" class=\"mat-elevation-z8 demo-table\">\r\n  <!-- Position Column -->\r\n  <ng-container matColumnDef=\"position\">\r\n    <th mat-header-cell *matHeaderCellDef>No.</th>\r\n    <td mat-cell *matCellDef=\"let element\">{{ element.id }}</td>\r\n  </ng-container>\r\n\r\n  <!-- Name Column -->\r\n  <ng-container matColumnDef=\"name\">\r\n    <th mat-header-cell *matHeaderCellDef>Name</th>\r\n    <td mat-cell *matCellDef=\"let element\">\r\n      <mat-form-field\r\n        class=\"example-form-field\"\r\n        appearance=\"fill\"\r\n        *ngIf=\"isEdit\"\r\n      >\r\n        <input matInput type=\"text\" [(ngModel)]=\"element.name\" />\r\n        <button\r\n          *ngIf=\"element.name\"\r\n          matSuffix\r\n          mat-icon-button\r\n          aria-label=\"Clear\"\r\n          (click)=\"value = ''\"\r\n        >\r\n          <mat-icon>close</mat-icon>\r\n        </button>\r\n      </mat-form-field>\r\n      <div class=\"add\" *ngIf=\"!isEdit && newRows.has(element)\">\r\n        <mat-form-field class=\"example-form-field\" appearance=\"fill\">\r\n          <input matInput type=\"text\" [(ngModel)]=\"element.name\" />\r\n        </mat-form-field>\r\n        <button\r\n          mat-flat-button\r\n          color=\"accent\"\r\n          [disabled]=\"!clickedRows.size\"\r\n          (click)=\"onRowSave(element.id)\"\r\n        >\r\n          Save\r\n        </button>\r\n      </div>\r\n\r\n      <p *ngIf=\"!isEdit && !newRows.has(element)\">\r\n        {{ element.name }}\r\n      </p>\r\n    </td>\r\n  </ng-container>\r\n\r\n  <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n  <tr\r\n    mat-row\r\n    (click)=\"clickedRows.add(row)\"\r\n    [class.demo-row-is-clicked]=\"clickedRows.has(row)\"\r\n    *matRowDef=\"let row; columns: displayedColumns\"\r\n  ></tr>\r\n</table>\r\n","import { AnswerService } from './../../_services/answer.service';\r\nimport { QuestionService } from '../../_services/question.service';\r\nimport { Test, Question } from '@app/_models';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { TestsService } from '@app/_services';\r\nimport {\r\n  Component,\r\n  Input,\r\n  OnInit,\r\n  ViewChild,\r\n  EventEmitter,\r\n  Output,\r\n} from '@angular/core';\r\nimport { MatTable } from '@angular/material/table';\r\n\r\n@Component({\r\n  selector: 'questions-admin',\r\n\r\n  templateUrl: 'questions-edit.component.html',\r\n  styleUrls: ['./../style-admin.scss'],\r\n  providers: [TestsService, QuestionService, AnswerService],\r\n})\r\nexport class QuestionsEditComponent implements OnInit {\r\n  displayedColumns: string[] = ['question', 'answers'];\r\n  test: Test;\r\n  question: Question = new Question();\r\n  questions: Question[] = [];\r\n  clickedRows = new Set<Question>();\r\n  newRows = new Set<Question>();\r\n  isEdit = false;\r\n  @Input() id: number;\r\n  @ViewChild(MatTable) table: MatTable<Test>;\r\n  @Output() answer = new EventEmitter<Question>();\r\n\r\n  constructor(\r\n    private testService: TestsService,\r\n    private questionService: QuestionService,\r\n    private router: Router,\r\n    activeRoute: ActivatedRoute\r\n  ) {}\r\n  change(e: any) {\r\n    this.answer.emit(e);\r\n  }\r\n  ngOnInit() {\r\n    this.loadTest();\r\n    this.loadQuestion();\r\n  }\r\n\r\n  clear() {\r\n    this.clickedRows.clear();\r\n    this.newRows.clear();\r\n    this.isEdit = false;\r\n  }\r\n\r\n  loadTest() {\r\n    this.testService\r\n      .getAllTests()\r\n      .subscribe(\r\n        (data: Test[]) => (this.test = data.find((x) => x.id == this.id))\r\n      );\r\n    this.clear();\r\n  }\r\n\r\n  loadQuestion() {\r\n    this.questionService\r\n      .getAllQuestions()\r\n      .subscribe(\r\n        (data: Question[]) =>\r\n          (this.questions = data.filter((x) => x.testId == this.test.id))\r\n      );\r\n    this.clear();\r\n  }\r\n\r\n  clickAdd() {\r\n    let newItem: Question = {\r\n      id: null,\r\n      testId: this.test.id,\r\n      question: null,\r\n    };\r\n    this.questions.unshift(newItem);\r\n    this.newRows.add(newItem);\r\n    this.table.renderRows();\r\n  }\r\n\r\n  onRowSave(id: number) {\r\n    this.newRows.forEach((m) => {\r\n      if (id == m.id) {\r\n        this.question.question = m.question;\r\n        this.question.testId = this.test.id;\r\n\r\n        this.questionService\r\n          .createQuestion(this.question)\r\n          .subscribe((data) => this.loadQuestion());\r\n        this.question = new Question();\r\n      }\r\n    });\r\n    this.clear();\r\n  }\r\n\r\n  clickDelete(set: Set<Question>) {\r\n    for (let value of set)\r\n      this.questionService\r\n        .deleteQuestion(value.id)\r\n        .subscribe((data) => this.loadQuestion());\r\n    this.clear();\r\n    this.loadQuestion();\r\n  }\r\n\r\n  clickSave(set: Set<Question>) {\r\n    for (let value of set)\r\n      this.questionService\r\n        .updateQuestion(value)\r\n        .subscribe((data) => this.loadQuestion());\r\n    this.clear();\r\n    this.loadQuestion();\r\n  }\r\n\r\n  clickEdit(set: Set<Question>) {\r\n    let forEdit = new Array<Question>();\r\n    for (let value of set) forEdit.push(value);\r\n    this.questions = forEdit;\r\n    set.clear();\r\n    this.clear();\r\n    this.isEdit = true;\r\n  }\r\n\r\n  onButtonAnswer(id: number) {\r\n    if (id) this.router.navigate(['/admin/answers', id]);\r\n  }\r\n}\r\n","<mat-card>\r\n  <mat-card-header>\r\n    <mat-card-title>{{ test.title }}</mat-card-title>\r\n  </mat-card-header>\r\n  <mat-card-content>\r\n    <p>\r\n      {{ test.description }}\r\n    </p>\r\n  </mat-card-content>\r\n</mat-card>\r\n<br />\r\n<div class=\"action-buttons\" *ngIf=\"!isEdit; else save\">\r\n  <button mat-raised-button color=\"primary\" (click)=\"clickAdd()\">Add</button>\r\n  <button\r\n    mat-flat-button\r\n    color=\"accent\"\r\n    [disabled]=\"!clickedRows.size\"\r\n    (click)=\"clickEdit(clickedRows)\"\r\n  >\r\n    Edit\r\n  </button>\r\n  <button\r\n    mat-flat-button\r\n    color=\"warn\"\r\n    [disabled]=\"!clickedRows.size\"\r\n    (click)=\"clickDelete(clickedRows)\"\r\n  >\r\n    Delete\r\n  </button>\r\n  <span>*To change items, click on rows to select </span>\r\n</div>\r\n<ng-template #save>\r\n  <div class=\"action-buttons\">\r\n    <button\r\n      mat-flat-button\r\n      color=\"accent\"\r\n      [disabled]=\"!clickedRows.size\"\r\n      (click)=\"clickSave(clickedRows)\"\r\n    >\r\n      Save\r\n    </button>\r\n  </div>\r\n</ng-template>\r\n\r\n<table mat-table [dataSource]=\"questions\" class=\"mat-elevation-z8 demo-table\">\r\n  <!-- title Column -->\r\n  <ng-container matColumnDef=\"question\">\r\n    <th mat-header-cell *matHeaderCellDef>Question</th>\r\n    <td mat-cell *matCellDef=\"let element\">\r\n      <mat-form-field\r\n        class=\"example-form-field\"\r\n        appearance=\"fill\"\r\n        *ngIf=\"isEdit\"\r\n      >\r\n        <input matInput type=\"text\" [(ngModel)]=\"element.question\" />\r\n      </mat-form-field>\r\n      <div class=\"add\" *ngIf=\"!isEdit && newRows.has(element)\">\r\n        <mat-form-field class=\"example-form-field\" appearance=\"fill\">\r\n          <input matInput type=\"text\" [(ngModel)]=\"element.question\" />\r\n        </mat-form-field>\r\n        <button\r\n          mat-flat-button\r\n          color=\"accent\"\r\n          [disabled]=\"!clickedRows.size\"\r\n          (click)=\"onRowSave(element.id)\"\r\n        >\r\n          Save\r\n        </button>\r\n      </div>\r\n\r\n      <p *ngIf=\"!isEdit && !newRows.has(element)\">\r\n        {{ element.question }}\r\n      </p>\r\n    </td>\r\n  </ng-container>\r\n\r\n  <!-- Description Column -->\r\n  <ng-container matColumnDef=\"answers\">\r\n    <th mat-header-cell *matHeaderCellDef>Answers</th>\r\n    <td mat-cell *matCellDef=\"let element\">\r\n      <button\r\n        mat-flat-button\r\n        *ngIf=\"!isEdit && !newRows.has(element)\"\r\n        color=\"primary\"\r\n        (click)=\"change(element)\"\r\n      >\r\n        Answers\r\n      </button>\r\n    </td>\r\n  </ng-container>\r\n\r\n  <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n  <tr\r\n    mat-row\r\n    (click)=\"clickedRows.add(row)\"\r\n    [class.demo-row-is-clicked]=\"clickedRows.has(row)\"\r\n    *matRowDef=\"let row; columns: displayedColumns\"\r\n  ></tr>\r\n</table>\r\n","import { Router } from '@angular/router';\r\nimport { element } from 'protractor';\r\nimport { CategoriesService } from './../../_services/categories.service';\r\nimport { Categories } from './../../_models/categories';\r\nimport { TestsService } from './../../_services/tests.service';\r\nimport { Test } from '../../_models/test';\r\nimport {\r\n  Component,\r\n  OnInit,\r\n  Output,\r\n  EventEmitter,\r\n  ViewChild,\r\n} from '@angular/core';\r\nimport { MatTable } from '@angular/material/table';\r\n\r\n@Component({\r\n  selector: 'tests-admin',\r\n\r\n  templateUrl: 'test-edit.component.html',\r\n  styleUrls: ['./../style-admin.scss'],\r\n  providers: [TestsService, CategoriesService],\r\n})\r\nexport class TestEditComponent implements OnInit {\r\n  displayedColumns: string[] = [\r\n    'position',\r\n    'category',\r\n    'title',\r\n    'description',\r\n    'questions',\r\n  ];\r\n  test: Test = new Test();\r\n  tests: Test[] = [];\r\n  categories: Categories[];\r\n  clickedRows = new Set<Test>();\r\n  newRows = new Set<Test>();\r\n  isEdit = false;\r\n  @ViewChild(MatTable) table: MatTable<Test>;\r\n  @Output() question = new EventEmitter<Test>();\r\n\r\n  constructor(\r\n    private testService: TestsService,\r\n    private categoriesService: CategoriesService,\r\n    private router: Router\r\n  ) {}\r\n  change(e: any) {\r\n    this.question.emit(e);\r\n  }\r\n  ngOnInit() {\r\n    this.loadTest();\r\n  }\r\n\r\n  clear() {\r\n    this.clickedRows.clear();\r\n    this.newRows.clear();\r\n    this.isEdit = false;\r\n  }\r\n\r\n  loadCategories() {\r\n    this.categoriesService\r\n      .getAllCategories()\r\n      .subscribe((data: Categories[]) => (this.categories = data));\r\n  }\r\n\r\n  loadTest() {\r\n    this.testService\r\n      .getAllTests()\r\n      .subscribe((data: Test[]) => (this.tests = data));\r\n    this.clear();\r\n  }\r\n\r\n  clickAdd() {\r\n    let newItem: Test = {\r\n      id: null,\r\n      title: null,\r\n      description: null,\r\n      categoryId: 0,\r\n    };\r\n    this.loadCategories();\r\n    this.tests.unshift(newItem);\r\n    this.newRows.add(newItem);\r\n    this.table.renderRows();\r\n  }\r\n\r\n  clickDelete(set: Set<Test>) {\r\n    for (let value of set)\r\n      this.testService\r\n        .deleteTest(value.id)\r\n        .subscribe((data) => this.loadTest());\r\n    this.clear();\r\n    this.loadTest();\r\n  }\r\n\r\n  clickSave(set: Set<Test>) {\r\n    for (let value of set)\r\n      this.testService.updateTest(value).subscribe((data) => this.loadTest());\r\n    this.clear();\r\n    this.loadTest();\r\n  }\r\n\r\n  onRowSave(id: number) {\r\n    this.newRows.forEach((m) => {\r\n      if (id == m.id) {\r\n        this.test.title = m.title;\r\n        this.test.description = m.description;\r\n        this.test.categoryId = m.categoryId;\r\n\r\n        this.testService\r\n          .createTest(this.test)\r\n          .subscribe((data) => this.loadTest());\r\n        this.test = new Test();\r\n      }\r\n    });\r\n    this.clear();\r\n  }\r\n\r\n  clickEdit(set: Set<Test>) {\r\n    let forEdit = new Array<Test>();\r\n    for (let value of set) forEdit.push(value);\r\n    this.tests = forEdit;\r\n    this.loadCategories();\r\n    set.clear();\r\n    this.clear();\r\n    this.isEdit = true;\r\n  }\r\n\r\n  onButtonQuestion(id: number) {\r\n    // if (id) this.router.navigate(['/admin/questions', id]);\r\n    // this.onChange.emit(id);\r\n  }\r\n}\r\n","<div class=\"header\">Tests</div>\r\n<div class=\"action-buttons\" *ngIf=\"!isEdit; else save\">\r\n  <button mat-raised-button color=\"primary\" (click)=\"clickAdd()\">Add</button>\r\n  <button\r\n    mat-flat-button\r\n    color=\"accent\"\r\n    [disabled]=\"!clickedRows.size\"\r\n    (click)=\"clickEdit(clickedRows)\"\r\n  >\r\n    Edit\r\n  </button>\r\n  <button\r\n    mat-flat-button\r\n    color=\"warn\"\r\n    [disabled]=\"!clickedRows.size\"\r\n    (click)=\"clickDelete(clickedRows)\"\r\n  >\r\n    Delete\r\n  </button>\r\n  <span>*To change items, click on rows to select </span>\r\n</div>\r\n<ng-template #save>\r\n  <div class=\"action-buttons\">\r\n    <button\r\n      mat-flat-button\r\n      color=\"accent\"\r\n      [disabled]=\"!clickedRows.size\"\r\n      (click)=\"clickSave(clickedRows)\"\r\n    >\r\n      Save\r\n    </button>\r\n  </div>\r\n</ng-template>\r\n\r\n<table mat-table [dataSource]=\"tests\" class=\"mat-elevation-z8 demo-table\">\r\n  <!-- Position Column -->\r\n  <ng-container matColumnDef=\"position\">\r\n    <th mat-header-cell *matHeaderCellDef>No.</th>\r\n    <td mat-cell *matCellDef=\"let element\">\r\n      {{ element.id }}\r\n    </td>\r\n  </ng-container>\r\n\r\n  <!-- Category Column -->\r\n  <ng-container matColumnDef=\"category\">\r\n    <th mat-header-cell *matHeaderCellDef>Categories.Id</th>\r\n    <td mat-cell *matCellDef=\"let element\">\r\n      <mat-form-field appearance=\"fill\" *ngIf=\"isEdit || newRows.has(element)\">\r\n        <select matNativeControl [(ngModel)]=\"element.categoryId\" name=\"car\">\r\n          <option\r\n            *ngFor=\"let cat of categories\"\r\n            [ngValue]=\"cat.id\"\r\n            [selected]=\"element.categoryId === cat.id\"\r\n          >\r\n            {{ cat.name }}\r\n          </option>\r\n        </select>\r\n      </mat-form-field>\r\n      <p *ngIf=\"!isEdit && !newRows.has(element)\">\r\n        {{ element.categoryId }}\r\n      </p>\r\n    </td>\r\n  </ng-container>\r\n\r\n  <!-- title Column -->\r\n  <ng-container matColumnDef=\"title\">\r\n    <th mat-header-cell *matHeaderCellDef>Title</th>\r\n    <td mat-cell *matCellDef=\"let element\">\r\n      <mat-form-field\r\n        class=\"example-form-field\"\r\n        appearance=\"fill\"\r\n        *ngIf=\"isEdit\"\r\n      >\r\n        <input matInput type=\"text\" [(ngModel)]=\"element.title\" />\r\n      </mat-form-field>\r\n      <div class=\"add\" *ngIf=\"!isEdit && newRows.has(element)\">\r\n        <mat-form-field class=\"example-form-field\" appearance=\"fill\">\r\n          <input matInput type=\"text\" [(ngModel)]=\"element.title\" />\r\n        </mat-form-field>\r\n      </div>\r\n\r\n      <p *ngIf=\"!isEdit && !newRows.has(element)\">\r\n        {{ element.title }}\r\n      </p>\r\n    </td>\r\n  </ng-container>\r\n\r\n  <!-- Description Column -->\r\n  <ng-container matColumnDef=\"description\">\r\n    <th mat-header-cell *matHeaderCellDef>Description</th>\r\n    <td mat-cell *matCellDef=\"let element\">\r\n      <mat-form-field\r\n        class=\"example-form-field\"\r\n        appearance=\"fill\"\r\n        *ngIf=\"isEdit\"\r\n      >\r\n        <input matInput type=\"text\" [(ngModel)]=\"element.description\" />\r\n      </mat-form-field>\r\n      <div class=\"add\" *ngIf=\"!isEdit && newRows.has(element)\">\r\n        <mat-form-field class=\"example-form-field\" appearance=\"fill\">\r\n          <input matInput type=\"text\" [(ngModel)]=\"element.description\" />\r\n        </mat-form-field>\r\n        <button\r\n          mat-flat-button\r\n          color=\"accent\"\r\n          [disabled]=\"!clickedRows.size\"\r\n          (click)=\"onRowSave(element.id)\"\r\n        >\r\n          Save\r\n        </button>\r\n      </div>\r\n\r\n      <p *ngIf=\"!isEdit && !newRows.has(element)\">\r\n        {{ element.description }}\r\n      </p>\r\n    </td>\r\n  </ng-container>\r\n\r\n  <!-- Question Column -->\r\n  <ng-container matColumnDef=\"questions\">\r\n    <th mat-header-cell *matHeaderCellDef></th>\r\n    <td mat-cell *matCellDef=\"let element\">\r\n      <button\r\n        mat-flat-button\r\n        *ngIf=\"!isEdit && !newRows.has(element)\"\r\n        color=\"primary\"\r\n        (click)=\"change(element)\"\r\n      >\r\n        Questions\r\n      </button>\r\n    </td>\r\n  </ng-container>\r\n\r\n  <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n  <tr\r\n    mat-row\r\n    (click)=\"clickedRows.add(row)\"\r\n    [class.demo-row-is-clicked]=\"clickedRows.has(row)\"\r\n    *matRowDef=\"let row; columns: displayedColumns\"\r\n  ></tr>\r\n</table>\r\n","import { RegComponent } from './reg/reg.component';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { AdminComponent } from './admin/admin.component';\r\nimport { AnswersEditComponent } from './admin/answers/answers-edit.component';\r\nimport { QuestionsEditComponent } from './admin/questions/questions.component';\r\nimport { TestEditComponent } from './admin/tests/test-edit.component';\r\nimport { CategoriesEditComponent } from './admin/categories/categories-edit.component';\r\nimport { ResultComponent } from './result/result.component';\r\nimport { PlayTestComponent } from './play-test/play-test.component';\r\nimport { CategoriesComponent } from './categories/categories.component';\r\nimport { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { LoginComponent } from './login';\r\nimport { TestListComponent } from './test-list/test-list.component';\r\nimport { AuthGuard } from './_helpers';\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: HomeComponent, canActivate: [AuthGuard] },\r\n  { path: 'login', component: LoginComponent },\r\n  { path: 'addlogin', component: RegComponent },\r\n  {\r\n    path: 'test-list/:id',\r\n    component: TestListComponent,\r\n    canActivate: [AuthGuard],\r\n  },\r\n  {\r\n    path: 'categories',\r\n    component: CategoriesComponent,\r\n    canActivate: [AuthGuard],\r\n  },\r\n\r\n  {\r\n    path: 'admin',\r\n    component: AdminComponent,\r\n    canActivate: [AuthGuard],\r\n  },\r\n  { path: 'play/:id', component: PlayTestComponent, canActivate: [AuthGuard] },\r\n  { path: 'result', component: ResultComponent, canActivate: [AuthGuard] },\r\n\r\n  { path: '**', redirectTo: '' },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class AppRoutingModule {}\r\n","import { Component } from '@angular/core';\r\n\r\nimport { AuthenticationService } from './_services';\r\nimport { User } from './_models';\r\n\r\n@Component({\r\n  selector: 'app',\r\n  templateUrl: 'app.component.html',\r\n  styleUrls: ['./app.component.scss'],\r\n})\r\nexport class AppComponent {\r\n  user: User;\r\n\r\n  constructor(private authenticationService: AuthenticationService) {\r\n    this.authenticationService.user.subscribe((x) => (this.user = x));\r\n  }\r\n\r\n  logout() {\r\n    this.authenticationService.logout();\r\n  }\r\n}\r\n","<mat-toolbar>\r\n  <mat-toolbar-row class=\"toolbar\">\r\n    <span class=\"nav-item nav-link\" routerLink=\"/\">Home</span>\r\n    <span *ngIf=\"user\" class=\"nav-item nav-link\" routerLink=\"/categories\"\r\n      >Categories</span\r\n    >\r\n    <span\r\n      class=\"nav-item nav-link\"\r\n      *ngIf=\"user?.admin\"\r\n      routerLink=\"/admin\"\r\n      style=\"font-weight: 900; color: red\"\r\n      >Setting</span\r\n    >\r\n\r\n    <span *ngIf=\"user\" class=\"nav-item nav-link\" (click)=\"logout()\"\r\n      >Logout</span\r\n    >\r\n    <span class=\"example-spacer\"></span>\r\n\r\n    <span class=\"nav-item nav-link\" routerLink=\"/categories\">{{\r\n      user?.username\r\n    }}</span>\r\n    <mat-icon\r\n      *ngIf=\"user?.id\"\r\n      class=\"example-icon\"\r\n      aria-hidden=\"false\"\r\n      aria-label=\"Example user verified icon\"\r\n      >verified_user</mat-icon\r\n    >\r\n  </mat-toolbar-row>\r\n</mat-toolbar>\r\n<!-- main app container -->\r\n\r\n<router-outlet></router-outlet>\r\n","import { RegComponent } from './reg/reg.component';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { AdminComponent } from './admin/admin.component';\r\nimport { AnswersEditComponent } from './admin/answers/answers-edit.component';\r\nimport { QuestionsEditComponent } from './admin/questions/questions.component';\r\nimport { TestListComponent } from './test-list/test-list.component';\r\nimport { TestEditComponent } from './admin/tests/test-edit.component';\r\nimport { CategoriesEditComponent } from './admin/categories/categories-edit.component';\r\nimport { ResultComponent } from './result/result.component';\r\nimport { PlayTestComponent } from './play-test/play-test.component';\r\nimport { TestAcceptDialog } from './test-list/test-accept-dialog/test-accept-dialog';\r\nimport { CategoriesComponent } from './categories/categories.component';\r\nimport { NgModule, APP_INITIALIZER } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { AppRoutingModule } from './app-routing.module';\r\n\r\nimport { JwtInterceptor, ErrorInterceptor, appInitializer } from './_helpers';\r\nimport { AuthenticationService } from './_services';\r\nimport { LoginComponent } from './login';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { MatExpansionModule } from '@angular/material/expansion';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatListModule } from '@angular/material/list';\r\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\r\nimport { MatRadioModule } from '@angular/material/radio';\r\nimport { MatStepperModule } from '@angular/material/stepper';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatTabsModule } from '@angular/material/tabs';\r\nimport { MatSortModule } from '@angular/material/sort';\r\n\r\n@NgModule({\r\n  imports: [\r\n    BrowserModule,\r\n    ReactiveFormsModule,\r\n    HttpClientModule,\r\n    AppRoutingModule,\r\n    BrowserAnimationsModule,\r\n    MatButtonModule,\r\n    MatFormFieldModule,\r\n    MatCardModule,\r\n    MatIconModule,\r\n    MatCheckboxModule,\r\n    MatExpansionModule,\r\n    MatInputModule,\r\n    MatListModule,\r\n    MatProgressBarModule,\r\n    MatRadioModule,\r\n    MatStepperModule,\r\n    MatTableModule,\r\n    MatToolbarModule,\r\n    MatSnackBarModule,\r\n    MatDialogModule,\r\n    FormsModule,\r\n    MatTabsModule,\r\n    MatSortModule,\r\n  ],\r\n  declarations: [\r\n    AppComponent,\r\n    HomeComponent,\r\n    LoginComponent,\r\n    CategoriesComponent,\r\n    CategoriesEditComponent,\r\n    TestAcceptDialog,\r\n    TestEditComponent,\r\n    PlayTestComponent,\r\n    ResultComponent,\r\n    TestListComponent,\r\n    QuestionsEditComponent,\r\n    AnswersEditComponent,\r\n    AdminComponent,\r\n    HomeComponent,\r\n    RegComponent,\r\n  ],\r\n  exports: [MatSortModule],\r\n  providers: [\r\n    {\r\n      provide: APP_INITIALIZER,\r\n      useFactory: appInitializer,\r\n      multi: true,\r\n      deps: [AuthenticationService],\r\n    },\r\n    { provide: HTTP_INTERCEPTORS, useClass: JwtInterceptor, multi: true },\r\n    { provide: HTTP_INTERCEPTORS, useClass: ErrorInterceptor, multi: true },\r\n  ],\r\n  bootstrap: [AppComponent],\r\n})\r\nexport class AppModule {}\r\n","import { AuthenticationService } from './../_services/authentication.service';\r\nimport { User } from './../_models/user';\r\nimport { CategoriesService } from './../_services/categories.service';\r\nimport { Categories } from './../_models/categories';\r\nimport { Component, Input, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-categories',\r\n  templateUrl: 'categories.component.html',\r\n  providers: [CategoriesService],\r\n})\r\nexport class CategoriesComponent implements OnInit {\r\n  categories: Categories[];\r\n  tableMode: boolean;\r\n  user: User;\r\n  admin: boolean = true;\r\n\r\n  constructor(\r\n    private authenticationService: AuthenticationService,\r\n    private categoriesService: CategoriesService\r\n  ) {\r\n    this.authenticationService.user.subscribe((x) => (this.user = x));\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.loadCategories();\r\n  }\r\n\r\n  loadCategories() {\r\n    this.categoriesService\r\n      .getAllCategories()\r\n      .subscribe((data: Categories[]) => (this.categories = data));\r\n  }\r\n}\r\n","<div class=\"container\">\r\n  <div class=\"header\">Categories</div>\r\n  <mat-card>\r\n    <mat-card-content>\r\n      <mat-nav-list role=\"list\" *ngFor=\"let cat of categories; let last = last\">\r\n        <mat-list-item role=\"listitem\" [routerLink]=\"['/test-list', cat.id]\"\r\n          >{{ cat.name }}\r\n          <mat-divider *ngIf=\"!last\"></mat-divider>\r\n        </mat-list-item>\r\n      </mat-nav-list>\r\n    </mat-card-content>\r\n  </mat-card>\r\n</div>\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { AuthenticationService } from './../_services/authentication.service';\r\nimport { UserScore } from './../_models/user-score';\r\nimport { ResultService } from './../_services/result.service';\r\nimport { Component, OnInit, ViewChild, AfterViewInit } from '@angular/core';\r\nimport { first } from 'rxjs/operators';\r\n\r\nimport { User, Test } from '@app/_models';\r\nimport { UserService, TestsService } from '@app/_services';\r\nimport { MatSort, Sort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nexport interface Dessert {\r\n  calories: number;\r\n  carbs: number;\r\n  fat: number;\r\n  name: string;\r\n  protein: number;\r\n}\r\n@Component({ templateUrl: 'home.component.html' })\r\nexport class HomeComponent implements OnInit, AfterViewInit {\r\n  displayedColumns: string[] = ['test', 'user', 'correct', 'wrong', 'time'];\r\n  users: User[];\r\n  userScores: UserScore[];\r\n  user: User;\r\n  tests: Test[];\r\n\r\n  sortedData: UserScore[];\r\n  @ViewChild(MatSort) sort: MatSort;\r\n\r\n  public dataSource = new MatTableDataSource<UserScore>();\r\n\r\n  constructor(\r\n    private userService: UserService,\r\n    private resultService: ResultService,\r\n    private authenticationService: AuthenticationService\r\n  ) {\r\n    this.authenticationService.user.subscribe((x) => (this.user = x));\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.userService\r\n      .getAll()\r\n      .pipe(first())\r\n      .subscribe((users) => {\r\n        this.users = users;\r\n      });\r\n    this.getScore();\r\n  }\r\n\r\n  getScore() {\r\n    this.resultService.getAllScores().subscribe((data: UserScore[]) => {\r\n      this.dataSource.data = data as UserScore[];\r\n      this.userScores = data.filter((m) => m.userId == this.user.id);\r\n      console.log(this.userScores);\r\n    });\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.dataSource.sort = this.sort;\r\n  }\r\n\r\n  getUserName(id: number) {\r\n    let u = this.users.find((m) => m.id == id);\r\n    return u.username;\r\n  }\r\n\r\n  getTime(t: number) {\r\n    let s = t;\r\n    let m = 0;\r\n    m = Math.trunc(s / 60);\r\n    if (m > 0) {\r\n      s = s % 60;\r\n    }\r\n    return `${m > 9 ? '' : '0'}${m}:${s > 9 ? '' : '0'}${s}`;\r\n  }\r\n}\r\n","<div class=\"container container__tab\">\r\n  <div>\r\n    <div class=\"header\">Scoreboard</div>\r\n    <table mat-table [dataSource]=\"dataSource\" matSort class=\"mat-elevation-z8\">\r\n      <!-- Position Column -->\r\n      <ng-container matColumnDef=\"test\">\r\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>TestId</th>\r\n        <td mat-cell *matCellDef=\"let element\">\r\n          {{ element.testId }}\r\n        </td>\r\n      </ng-container>\r\n\r\n      <!-- Name Column -->\r\n      <ng-container matColumnDef=\"user\">\r\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>User</th>\r\n        <td mat-cell *matCellDef=\"let element\">\r\n          {{ getUserName(element.userId) }}\r\n        </td>\r\n      </ng-container>\r\n\r\n      <!-- Weight Column -->\r\n      <ng-container matColumnDef=\"correct\">\r\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>Correct</th>\r\n        <td mat-cell *matCellDef=\"let element\">{{ element.correct }}</td>\r\n      </ng-container>\r\n\r\n      <!-- Symbol Column -->\r\n      <ng-container matColumnDef=\"wrong\">\r\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>Wrong</th>\r\n        <td mat-cell *matCellDef=\"let element\">{{ element.wrong }}</td>\r\n      </ng-container>\r\n\r\n      <!-- Symbol Column -->\r\n      <ng-container matColumnDef=\"time\">\r\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>mm:ss</th>\r\n        <td mat-cell *matCellDef=\"let element\">{{ getTime(element.time) }}</td>\r\n      </ng-container>\r\n\r\n      <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n      <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\r\n    </table>\r\n  </div>\r\n  <div>\r\n    <div class=\"header\">Your board</div>\r\n    <table mat-table [dataSource]=\"userScores\" matSort class=\"mat-elevation-z8\">\r\n      <!-- Position Column -->\r\n      <ng-container matColumnDef=\"test\">\r\n        <th mat-header-cell *matHeaderCellDef>TestId</th>\r\n        <td mat-cell *matCellDef=\"let element\">\r\n          {{ element.testId }}\r\n        </td>\r\n      </ng-container>\r\n\r\n      <!-- Name Column -->\r\n      <ng-container matColumnDef=\"user\">\r\n        <th mat-header-cell *matHeaderCellDef>User</th>\r\n        <td mat-cell *matCellDef=\"let element\">\r\n          {{ getUserName(element.userId) }}\r\n        </td>\r\n      </ng-container>\r\n\r\n      <!-- Weight Column -->\r\n      <ng-container matColumnDef=\"correct\">\r\n        <th mat-header-cell *matHeaderCellDef>Correct</th>\r\n        <td mat-cell *matCellDef=\"let element\">{{ element.correct }}</td>\r\n      </ng-container>\r\n\r\n      <!-- Symbol Column -->\r\n      <ng-container matColumnDef=\"wrong\">\r\n        <th mat-header-cell *matHeaderCellDef>Wrong</th>\r\n        <td mat-cell *matCellDef=\"let element\">{{ element.wrong }}</td>\r\n      </ng-container>\r\n\r\n      <!-- Symbol Column -->\r\n      <ng-container matColumnDef=\"time\">\r\n        <th mat-header-cell *matHeaderCellDef>mm:ss</th>\r\n        <td mat-cell *matCellDef=\"let element\">{{ getTime(element.time) }}</td>\r\n      </ng-container>\r\n\r\n      <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n      <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\r\n    </table>\r\n  </div>\r\n  <div class=\"next\">\r\n    <button mat-raised-button color=\"primary\" routerLink=\"/categories\">\r\n      start a new test\r\n    </button>\r\n  </div>\r\n</div>\r\n","export * from './login.component';","import { Component, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { first } from 'rxjs/operators';\r\n\r\nimport { AuthenticationService } from '@app/_services';\r\n\r\n@Component({ templateUrl: 'login.component.html' })\r\nexport class LoginComponent implements OnInit {\r\n  loginForm: FormGroup;\r\n  loading = false;\r\n  submitted = false;\r\n  returnUrl: string;\r\n  error = '';\r\n  hide = true;\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private authenticationService: AuthenticationService\r\n  ) {\r\n    if (this.authenticationService.userValue) {\r\n      this.router.navigate(['/']);\r\n    }\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.loginForm = this.formBuilder.group({\r\n      username: ['', Validators.required],\r\n      password: ['', Validators.required],\r\n    });\r\n\r\n    this.returnUrl = this.route.snapshot.queryParams['returnUrl'] || '/';\r\n  }\r\n\r\n  get f() {\r\n    return this.loginForm.controls;\r\n  }\r\n\r\n  onSubmit() {\r\n    this.submitted = true;\r\n\r\n    if (this.loginForm.invalid) {\r\n      return;\r\n    }\r\n\r\n    this.loading = true;\r\n    this.authenticationService\r\n      .login(this.f.username.value, this.f.password.value)\r\n      .pipe(first())\r\n      .subscribe({\r\n        next: () => {\r\n          this.router.navigate([this.returnUrl]);\r\n        },\r\n        error: (error) => {\r\n          this.error = error;\r\n          this.loading = false;\r\n        },\r\n      });\r\n  }\r\n}\r\n","<div class=\"col-md-6 offset-md-3 mt-5\">\r\n  <div class=\"alert alert-info\">\r\n    Username: test / admin<br />\r\n    Password: test / admin\r\n  </div>\r\n  <div class=\"card\">\r\n    <h4 class=\"card-header\">\r\n      Login to site, or <a routerLink=\"/addlogin\">create account</a>\r\n    </h4>\r\n    <div class=\"card-body\">\r\n      <form [formGroup]=\"loginForm\" (ngSubmit)=\"onSubmit()\">\r\n        <div class=\"form-group\">\r\n          <label for=\"username\">Username</label>\r\n          <input\r\n            type=\"text\"\r\n            formControlName=\"username\"\r\n            class=\"form-control\"\r\n            [ngClass]=\"{ 'is-invalid': submitted && f.username.errors }\"\r\n          />\r\n          <div *ngIf=\"submitted && f.username.errors\" class=\"invalid-feedback\">\r\n            <div *ngIf=\"f.username.errors.required\">Username is required</div>\r\n          </div>\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <label for=\"password\">Password</label>\r\n          <input\r\n            type=\"password\"\r\n            formControlName=\"password\"\r\n            class=\"form-control\"\r\n            [ngClass]=\"{ 'is-invalid': submitted && f.password.errors }\"\r\n          />\r\n          <div *ngIf=\"submitted && f.password.errors\" class=\"invalid-feedback\">\r\n            <div *ngIf=\"f.password.errors.required\">Password is required</div>\r\n          </div>\r\n        </div>\r\n        <button [disabled]=\"loading\" class=\"btn btn-primary\">\r\n          <span\r\n            *ngIf=\"loading\"\r\n            class=\"spinner-border spinner-border-sm mr-1\"\r\n          ></span>\r\n          Login\r\n        </button>\r\n        <div *ngIf=\"error\" class=\"alert alert-danger mt-3 mb-0\">\r\n          {{ error }}\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { AuthenticationService } from './../_services/authentication.service';\r\nimport { UserScore } from './../_models/user-score';\r\nimport { TestsService } from './../_services/tests.service';\r\nimport { AnswerService } from './../_services/answer.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { QuestionService } from './../_services/question.service';\r\nimport { FormGroup, FormBuilder } from '@angular/forms';\r\nimport { Answer } from './../_models/answer';\r\nimport { Question, User } from '@app/_models';\r\nimport { Test } from '../_models/test';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { takeWhile, tap, timeInterval } from 'rxjs/operators';\r\nimport { interval, observable, timer, Observable } from 'rxjs';\r\nobservable;\r\n\r\n@Component({\r\n  templateUrl: './play-test.component.html',\r\n  styleUrls: ['./play-test.component.scss'],\r\n  providers: [QuestionService, AnswerService, TestsService],\r\n})\r\nexport class PlayTestComponent implements OnInit {\r\n  test: Test;\r\n  question: Question = new Question();\r\n  questions: Question[];\r\n  questionAnswers: Answer[] = [];\r\n  subscribeTimer = 0;\r\n  afterAnswerTimeout = 1500;\r\n  disabled = false;\r\n  count: number = 1;\r\n  questionsLength: number;\r\n  id: number;\r\n  timeDisplay: string;\r\n  time: number = 0;\r\n  resultPage = false;\r\n  userScore: UserScore = new UserScore();\r\n  user: User;\r\n  progress: string[] = [];\r\n\r\n  constructor(\r\n    private questionService: QuestionService,\r\n    private answerService: AnswerService,\r\n    private testService: TestsService,\r\n    private authenticationService: AuthenticationService,\r\n    activeRoute: ActivatedRoute\r\n  ) {\r\n    this.authenticationService.user.subscribe((x) => (this.user = x));\r\n    this.id = Number.parseInt(activeRoute.snapshot.params['id']);\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getTest();\r\n    this.getQuestions();\r\n    this.setTimer();\r\n    this.userScore.wrong = 0;\r\n    this.userScore.correct = 0;\r\n  }\r\n\r\n  getNextQuestion() {\r\n    if (this.count == this.questionsLength) {\r\n      this.userScore.time = this.time;\r\n      this.userScore.userId = this.user.id;\r\n      this.userScore.testId = this.test.id;\r\n      console.log(this.userScore);\r\n\r\n      this.resultPage = true;\r\n    } else {\r\n      this.question = this.questions.shift();\r\n      this.getAnswers(this.question);\r\n      this.disabled = false;\r\n      this.count++;\r\n    }\r\n  }\r\n\r\n  getQuestions() {\r\n    this.questionService.getAllQuestions().subscribe((data: Question[]) => {\r\n      this.questions = data.filter((x) => x.testId == this.id);\r\n      this.questionsLength = this.questions.length;\r\n      this.setProgress();\r\n\r\n      this.question = this.questions.shift();\r\n      this.getAnswers(this.question);\r\n      console.log(this.progress);\r\n    });\r\n  }\r\n\r\n  setProgress() {\r\n    for (let index = 0; index <= this.questionsLength; index++) {\r\n      this.progress[index] = 'default';\r\n    }\r\n  }\r\n\r\n  getTest() {\r\n    this.testService\r\n      .getTest(this.id)\r\n      .subscribe((data: Test) => (this.test = data));\r\n  }\r\n\r\n  getAnswers(question: Question) {\r\n    this.answerService\r\n      .getAllAnswers()\r\n      .subscribe(\r\n        (data: Answer[]) =>\r\n          (this.questionAnswers = data.filter(\r\n            (x) => x.questionId == this.question.id\r\n          ))\r\n      );\r\n  }\r\n\r\n  onClick(answer: Answer) {\r\n    if (!this.disabled) {\r\n      this.disabled = true;\r\n      if (answer.correct) {\r\n        this.userScore.correct++;\r\n        this.progress[this.count - 1] = 'correct';\r\n      } else {\r\n        this.userScore.wrong++;\r\n        this.progress[this.count - 1] = 'wrong';\r\n      }\r\n      let okJob = setTimeout(\r\n        () => this.getNextQuestion(),\r\n        this.afterAnswerTimeout\r\n      );\r\n    }\r\n  }\r\n\r\n  setTimer() {\r\n    let m = 0;\r\n    timer(0, 1000).subscribe((s) => {\r\n      this.time++;\r\n      m = Math.trunc(s / 60);\r\n      if (m > 0) {\r\n        s = s % 60;\r\n      }\r\n      this.timeDisplay = `${m > 9 ? '' : '0'}${m}:${s > 9 ? '' : '0'}${s}`;\r\n    });\r\n  }\r\n\r\n  getClass(answer: Answer) {\r\n    if (answer.correct) {\r\n      return 'correct';\r\n    } else if (this.disabled) {\r\n      return 'incorrect';\r\n    }\r\n    return 'default';\r\n  }\r\n}\r\n","<div class=\"container\">\r\n  <div *ngIf=\"!resultPage; else result\">\r\n    <div class=\"alert alert-info info\">\r\n      <div class=\"info__title\">{{ test.title }}</div>\r\n      <div class=\"info__questions\">\r\n        <mat-icon>help</mat-icon> {{ count }} / {{ questionsLength }}\r\n      </div>\r\n      <div class=\"info__timer\">\r\n        <mat-icon>alarm_on</mat-icon> {{ timeDisplay }}\r\n      </div>\r\n    </div>\r\n    <br />\r\n    <mat-card>\r\n      <mat-card-title>{{ question.question }}</mat-card-title>\r\n      <mat-card-actions>\r\n        <mat-radio-group\r\n          aria-labelledby=\"example-radio-group-label\"\r\n          class=\"example-radio-group\"\r\n        >\r\n          <mat-selection-list #answer [multiple]=\"false\">\r\n            <mat-list-option\r\n              *ngFor=\"let answer of questionAnswers; let i; as: index\"\r\n              [ngClass]=\"getClass(answer)\"\r\n              (click)=\"onClick(answer)\"\r\n            >\r\n              <mat-list-item role=\"listitem\"\r\n                ><mat-radio-button [value]=\"i\">{{\r\n                  answer.answer\r\n                }}</mat-radio-button></mat-list-item\r\n              >\r\n            </mat-list-option>\r\n          </mat-selection-list>\r\n        </mat-radio-group>\r\n      </mat-card-actions>\r\n    </mat-card>\r\n    <div class=\"progressbar\">\r\n      <div *ngFor=\"let i of progress\" [class]=\"i\"></div>\r\n    </div>\r\n  </div>\r\n  <ng-template #result>\r\n    <result-page [score]=\"userScore\" [progress]=\"progress\"></result-page>\r\n  </ng-template>\r\n</div>\r\n","import { User } from './../_models/user';\r\nimport { environment } from './../../environments/environment';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { first } from 'rxjs/operators';\r\n\r\nimport { AuthenticationService } from '@app/_services';\r\n\r\n@Component({ templateUrl: 'reg.component.html' })\r\nexport class RegComponent implements OnInit {\r\n  regForm: FormGroup;\r\n  loading = false;\r\n  submitted = false;\r\n  returnUrl: string;\r\n  error = '';\r\n  hide = true;\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private authenticationService: AuthenticationService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.regForm = this.formBuilder.group({\r\n      username: ['', Validators.required],\r\n      password: ['', Validators.required],\r\n      password2: ['', Validators.required],\r\n    });\r\n\r\n    this.returnUrl = this.route.snapshot.queryParams['returnUrl'] || '/';\r\n  }\r\n\r\n  get f() {\r\n    return this.regForm.controls;\r\n  }\r\n\r\n  onSubmit() {\r\n    this.submitted = true;\r\n\r\n    if (this.regForm.invalid) {\r\n      return;\r\n    }\r\n    if (this.f.password.value !== this.f.password2.value) {\r\n      this.error = 'Password mismatch!';\r\n      return;\r\n    }\r\n    this.loading = true;\r\n    let user: User = new User();\r\n\r\n    user.username = this.f.username.value;\r\n    user.password = this.f.password.value;\r\n\r\n    this.authenticationService\r\n      .reg(this.f.username.value, this.f.password.value)\r\n      .pipe(first())\r\n      .subscribe({\r\n        next: () => {\r\n          this.router.navigate([this.returnUrl]);\r\n        },\r\n        error: (error) => {\r\n          this.error = error;\r\n          this.loading = false;\r\n        },\r\n      });\r\n  }\r\n}\r\n","<div class=\"col-md-6 offset-md-3 mt-5\">\r\n  <div class=\"card\">\r\n    <h4 class=\"card-header\">Create new account</h4>\r\n    <div class=\"card-body\">\r\n      <form [formGroup]=\"regForm\" (ngSubmit)=\"onSubmit()\">\r\n        <div class=\"form-group\">\r\n          <label for=\"username\">Username</label>\r\n          <input\r\n            type=\"text\"\r\n            formControlName=\"username\"\r\n            class=\"form-control\"\r\n            [ngClass]=\"{ 'is-invalid': submitted && f.username.errors }\"\r\n          />\r\n          <div *ngIf=\"submitted && f.username.errors\" class=\"invalid-feedback\">\r\n            <div *ngIf=\"f.username.errors.required\">Username is required</div>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"form-group\">\r\n          <label for=\"password\">Password</label>\r\n          <input\r\n            type=\"password\"\r\n            formControlName=\"password\"\r\n            class=\"form-control\"\r\n            [ngClass]=\"{ 'is-invalid': submitted && f.password.errors }\"\r\n          />\r\n          <div *ngIf=\"submitted && f.password.errors\" class=\"invalid-feedback\">\r\n            <div *ngIf=\"f.password.errors.required\">Password is required</div>\r\n          </div>\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <label for=\"password\">Confirm Password</label>\r\n          <input\r\n            type=\"password\"\r\n            formControlName=\"password2\"\r\n            class=\"form-control\"\r\n            [ngClass]=\"{ 'is-invalid': submitted && f.password2.errors }\"\r\n          />\r\n          <div *ngIf=\"submitted && f.password2.errors\" class=\"invalid-feedback\">\r\n            <div *ngIf=\"f.password2.errors.required\">\r\n              Confirm Password is required\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <button [disabled]=\"loading\" class=\"btn btn-primary\">\r\n          <span\r\n            *ngIf=\"loading\"\r\n            class=\"spinner-border spinner-border-sm mr-1\"\r\n          ></span>\r\n          Create\r\n        </button>\r\n        <div *ngIf=\"error\" class=\"alert alert-danger mt-3 mb-0\">\r\n          {{ error }}\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { ResultService } from './../_services/result.service';\r\nimport { Router } from '@angular/router';\r\nimport { Test } from './../_models/test';\r\nimport { TestsService } from './../_services/tests.service';\r\nimport { UserScore } from './../_models/user-score';\r\nimport { Component, Input } from '@angular/core';\r\nimport { User } from '@app/_models';\r\n\r\n@Component({\r\n  selector: 'result-page',\r\n  templateUrl: 'result.component.html',\r\n  styleUrls: ['./result.component.scss'],\r\n})\r\nexport class ResultComponent {\r\n  @Input() score: UserScore;\r\n  @Input() progress: string[];\r\n  users: User[];\r\n  test: Test;\r\n  timeDisplay: string;\r\n  percentage: number;\r\n  displayTitle: string;\r\n\r\n  constructor(\r\n    private testService: TestsService,\r\n    private resultService: ResultService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.getTest();\r\n    this.setTime();\r\n    this.calculatePercentage();\r\n    this.saveResult();\r\n  }\r\n\r\n  getTest() {\r\n    this.testService\r\n      .getTest(this.score.testId)\r\n      .subscribe((data: Test) => (this.test = data));\r\n  }\r\n\r\n  setTime() {\r\n    let s = this.score.time;\r\n    let m = 0;\r\n    m = Math.trunc(s / 60);\r\n    if (m > 0) {\r\n      s = s % 60;\r\n    }\r\n    this.timeDisplay = `You completed the test in ${m} minutes and ${s} seconds`;\r\n  }\r\n\r\n  calculatePercentage() {\r\n    this.percentage = Math.ceil(\r\n      (100 * this.score.correct) / (this.score.correct + this.score.wrong)\r\n    );\r\n    if (this.percentage >= 80) {\r\n      this.displayTitle = 'Great job!';\r\n    } else if (this.percentage >= 60) {\r\n      this.displayTitle = 'Not Bad!';\r\n    } else {\r\n      this.displayTitle = 'Try again!';\r\n    }\r\n  }\r\n\r\n  saveResult() {\r\n    this.resultService.createScore(this.score).subscribe((data) => data);\r\n  }\r\n}\r\n","<div>\r\n  <mat-card class=\"result\">\r\n    <mat-card-title>Results</mat-card-title>\r\n    <mat-card-subtitle> {{ test.title }}</mat-card-subtitle>\r\n    <h1>Congratulations! You've completed the test!</h1>\r\n    <div class=\"result__subtitle\">\r\n      You scored {{ score.correct }} out of\r\n      {{ score.wrong + score.correct }} ({{ percentage }}%) questions correctly.\r\n    </div>\r\n    <div class=\"progressbar\">\r\n      <div *ngFor=\"let i of progress\" [class]=\"i\"></div>\r\n    </div>\r\n    <div class=\"result__score\">\r\n      {{ displayTitle }}\r\n    </div>\r\n\r\n    <div class=\"result__time\">\r\n      {{ timeDisplay }}\r\n    </div>\r\n\r\n    <div class=\"result__back\">\r\n      <button mat-raised-button color=\"primary\" routerLink=\"/categories\">\r\n        Return\r\n      </button>\r\n    </div>\r\n  </mat-card>\r\n</div>\r\n","import { Test } from '@app/_models';\r\nimport { Component, Inject } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\n\r\n@Component({\r\n  selector: 'test-accept-dialog',\r\n  templateUrl: 'test-accept-dialog.html',\r\n  styles: [\r\n    `\r\n      .dialog-actions {\r\n        justify-content: space-between;\r\n      }\r\n    `,\r\n  ],\r\n})\r\nexport class TestAcceptDialog {\r\n  checked = false;\r\n  disabled = false;\r\n\r\n  constructor(\r\n    public dialogRef: MatDialogRef<TestAcceptDialog>,\r\n    @Inject(MAT_DIALOG_DATA) public data: Test\r\n  ) {}\r\n\r\n  onNoClick(): void {\r\n    this.dialogRef.close();\r\n  }\r\n}\r\n","<h1 mat-dialog-title>{{data.title}}</h1>\r\n<div mat-dialog-content>\r\n  <p>{{data.description}}</p>\r\n</div>\r\n<div mat-dialog-actions class=\"dialog-actions\">\r\n  <section>\r\n    <mat-checkbox [(ngModel)]=\"checked\">I agree to start</mat-checkbox>\r\n  </section>\r\n  <button\r\n    mat-flat-button\r\n    color=\"accent\"\r\n    [mat-dialog-close]=\"true\"\r\n    [disabled]=\"!checked\"\r\n    cdkFocusInitial\r\n  >\r\n    Proceed\r\n  </button>\r\n</div>\r\n","import { Router, ActivatedRoute } from '@angular/router';\r\nimport { TestsService } from './../_services/tests.service';\r\nimport { TestAcceptDialog } from '../test-list/test-accept-dialog/test-accept-dialog';\r\nimport { Test } from '../_models/test';\r\nimport { Component } from '@angular/core';\r\n\r\nimport { MatDialog } from '@angular/material/dialog';\r\n\r\n@Component({\r\n  selector: 'app-tests-list',\r\n  templateUrl: './test-list.component.html',\r\n  providers: [TestsService],\r\n})\r\nexport class TestListComponent {\r\n  id: number;\r\n  loading = false;\r\n  testList = 'test-list';\r\n  tests: Test[];\r\n\r\n  constructor(\r\n    public dialog: MatDialog,\r\n    private router: Router,\r\n    private testService: TestsService,\r\n    activeRoute: ActivatedRoute\r\n  ) {\r\n    this.id = Number.parseInt(activeRoute.snapshot.params['id']);\r\n  }\r\n\r\n  openDialog(test: Test) {\r\n    const dialogRef = this.dialog.open(TestAcceptDialog, {\r\n      maxWidth: '500px',\r\n      data: test,\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe((result: boolean) => {\r\n      console.log('The dialog was closed ', result);\r\n      if (result == true) {\r\n        this.router.navigate(['/play', test.id]);\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getTestsByCategoryId();\r\n    console.log(this.tests);\r\n  }\r\n\r\n  getTestsByCategoryId() {\r\n    this.testService\r\n      .getAllTests()\r\n      .subscribe(\r\n        (data: Test[]) =>\r\n          (this.tests = data.filter((x) => x.categoryId == this.id))\r\n      );\r\n  }\r\n}\r\n","<div class=\"container\">\r\n  <mat-expansion-panel *ngFor=\"let test of tests\">\r\n    <mat-expansion-panel-header>\r\n      <mat-panel-title>{{ test.title }}</mat-panel-title>\r\n    </mat-expansion-panel-header>\r\n    <mat-divider></mat-divider><br />\r\n    <p>{{ test.description | slice: 0:100 }}...</p>\r\n    <button mat-raised-button color=\"primary\" (click)=\"openDialog(test)\">\r\n      Start\r\n    </button>\r\n  </mat-expansion-panel>\r\n</div>\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  apiUrl: 'http://localhost:4000'\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n    enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n    .catch(err => console.error(err));"],"sourceRoot":"webpack:///"}